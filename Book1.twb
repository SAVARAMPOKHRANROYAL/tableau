<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <CollapsiblePane />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Data (SIPRI Military Expenditure Database)' inline='true' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SIPRI Military Expenditure Database' name='excel-direct.05yomhz07u1cjz10ek51l1xx3opa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau/SIPRI Military Expenditure Database.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05yomhz07u1cjz10ek51l1xx3opa' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:F5883:no:A1:F5883:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Spending (2020 USD)' ordinal='2' />
            <column datatype='real' name='Percent of GDP' ordinal='3' />
            <column datatype='real' name='Percent of Government Spending' ordinal='4' />
            <column datatype='real' name='Spending per Capita' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05yomhz07u1cjz10ek51l1xx3opa' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:F5883:no:A1:F5883:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Spending (2020 USD)' ordinal='2' />
            <column datatype='real' name='Percent of GDP' ordinal='3' />
            <column datatype='real' name='Percent of Government Spending' ordinal='4' />
            <column datatype='real' name='Spending per Capita' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F5883:no:A1:F5883:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_B888F706742949CBB92F2611DD5B23E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_B888F706742949CBB92F2611DD5B23E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spending (2020 USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spending (2020 USD)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Spending (2020 USD)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_B888F706742949CBB92F2611DD5B23E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of GDP]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Percent of GDP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_B888F706742949CBB92F2611DD5B23E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of Government Spending</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of Government Spending]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Percent of Government Spending</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_B888F706742949CBB92F2611DD5B23E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spending per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spending per Capita]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Spending per Capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_B888F706742949CBB92F2611DD5B23E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% of spending' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Spending (2020 USD)]) / TOTAL(SUM([Spending (2020 USD)]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='blank' datatype='string' name='[Calculation_128071142949232640]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Top 10 vs others' datatype='string' name='[Calculation_95982994789388288]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Top 10 Country] THEN [Country]&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Percent of GDP]' role='measure' type='quantitative' />
      <column datatype='real' name='[Percent of Government Spending]' role='measure' type='quantitative' />
      <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_B888F706742949CBB92F2611DD5B23E4]' role='measure' type='quantitative' />
      <column-instance column='[Top 10 Country]' derivation='InOut' name='[io:Top 10 Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Percent of GDP]' derivation='Sum' name='[sum:Percent of GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent of Government Spending]' derivation='Sum' name='[sum:Percent of Government Spending:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Top 10 vs others)' hidden='true' name='[Action (Top 10 vs others)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_95982994789388288]' />
        </groupfilter>
      </group>
      <group caption='Top 10 Country' name='[Top 10 Country]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Spending (2020 USD)])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Top 10 Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of GDP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USSR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo, DR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen, North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;German Democratic Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo, Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yugoslavia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_B888F706742949CBB92F2611DD5B23E4'>
            <properties context=''>
              <relation connection='excel-direct.05yomhz07u1cjz10ek51l1xx3opa' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:F5883:no:A1:F5883:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Spending (2020 USD)' ordinal='2' />
                  <column datatype='real' name='Percent of GDP' ordinal='3' />
                  <column datatype='real' name='Percent of Government Spending' ordinal='4' />
                  <column datatype='real' name='Spending per Capita' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_E136635E43E842C5B7719A389D6909B5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='map that provides all the information adout the top 10 countries expenditure on miltary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_3309EBFFB02B4CAD859E8DAC2F17A413]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 10 countries spending on miltary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_C7B8D3707F2F466ABDA193639E760BC4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='main dashboard' type='sheet' worksheet='map for spending in 2020 in usd' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='main dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_1FECD833F03641748B414C797A5CDEA0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='map for spending in 2020 in usd' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_78CBDE5D7CB449F2B70C64CECB4086CB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='main dashboard' type='sheet' worksheet='Top 10 countries spending per capita income on miltary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='main dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_0F1A551F1008458FA19027E9A719E7AE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='percentage of GDP and government spending money on miltary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column caption='% of spending' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Spending (2020 USD)]) / TOTAL(SUM([Spending (2020 USD)]))'>
                <table-calc ordering-type='Columns' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Percent of Government Spending]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Government Spending]' derivation='Sum' name='[sum:Percent of Government Spending:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action4_C7B8D3707F2F466ABDA193639E760BC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Percent of Government Spending])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]' included-values='in-range'>
            <min>1988</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' />
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[usr:Calculation1:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]</rows>
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{8F709CBC-24D8-4197-9FA1-9614F3639314}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='2' fontsize='9'>Data Source:&lt;</run>
            <run fontalignment='2' fontsize='9'>Data Connection Name</run>
            <run fontalignment='2' fontsize='9'>&gt;as of&lt;Data Update Time&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column caption='blank' datatype='string' name='[Calculation_128071142949232640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column-instance column='[Calculation_128071142949232640]' derivation='None' name='[none:Calculation_128071142949232640:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_128071142949232640:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{74D79EE1-760E-4DDC-960D-D454CB644581}' />
    </worksheet>
    <worksheet name='Top 10 countries spending on miltary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column caption='% of spending' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Spending (2020 USD)]) / TOTAL(SUM([Spending (2020 USD)]))'>
                <table-calc ordering-type='Columns' />
              </calculation>
            </column>
            <column caption='Top 10 vs others' datatype='string' name='[Calculation_95982994789388288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top 10 Country] THEN [Country]&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
            <column-instance column='[Top 10 Country]' derivation='InOut' name='[io:Top 10 Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_95982994789388288]' derivation='None' name='[none:Calculation_95982994789388288:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spending (2020 USD)]' derivation='Sum' name='[sum:Spending (2020 USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_851C0ED417FD4F4EBB1C25DD6F8015E7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_95982994789388288:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_95982994789388288:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk]' />
              <text column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[usr:Calculation1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk] / [federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_95982994789388288:nk])</rows>
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]</cols>
      </table>
      <simple-id uuid='{D4042AA1-B1BE-4C0C-9F59-89246063248B}' />
    </worksheet>
    <worksheet name='Top 10 countries spending per capita income on miltary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Spending per Capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spending per Capita]' derivation='Sum' name='[sum:Spending per Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action4_C7B8D3707F2F466ABDA193639E760BC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Spending per Capita])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' value='74' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk] + [federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk])</rows>
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{B6FCAB8C-3B29-49A7-A7EB-06DD512668FD}' />
    </worksheet>
    <worksheet name='Top 10countries spending money on miltary in USD'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column caption='Top 10 vs others' datatype='string' name='[Calculation_95982994789388288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top 10 Country] THEN [Country]&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spending (2020 USD)]' derivation='Sum' name='[sum:Spending (2020 USD):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_E136635E43E842C5B7719A389D6909B5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Top 10 vs others)]'>
            <groupfilter function='level-members' level='[Calculation_95982994789388288]' user:ui-action-filter='[Action3_3309EBFFB02B4CAD859E8DAC2F17A413]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' context='true'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Spending (2020 USD)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]' included-values='in-range'>
            <min>1988</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Top 10 vs others)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]</rows>
        <cols>([federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk] * [federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{2C8E6770-C6FA-4503-93D5-8F79E1CB8782}' />
    </worksheet>
    <worksheet name='map for spending in 2020 in usd'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spending (2020 USD)]' derivation='Sum' name='[sum:Spending (2020 USD):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' />
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' />
              <geometry column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Latitude (generated)]</rows>
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D92EAEF3-8E17-40E0-B7DD-1E8DFAA79A72}' />
    </worksheet>
    <worksheet name='map that provides all the information adout the top 10 countries expenditure on miltary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column caption='Top 10 vs others' datatype='string' name='[Calculation_95982994789388288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top 10 Country] THEN [Country]&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Percent of GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percent of Government Spending]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spending per Capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent of GDP]' derivation='Sum' name='[sum:Percent of GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Government Spending]' derivation='Sum' name='[sum:Percent of Government Spending:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spending (2020 USD)]' derivation='Sum' name='[sum:Spending (2020 USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spending per Capita]' derivation='Sum' name='[sum:Spending per Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Top 10 vs others)]'>
            <groupfilter function='level-members' level='[Calculation_95982994789388288]' user:ui-action-filter='[Action3_3309EBFFB02B4CAD859E8DAC2F17A413]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Spending (2020 USD)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Top 10 vs others)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Longitude (generated)]' field-type='quantitative' max='38940040.73317866' min='-4638482.2429774012' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Latitude (generated)]' field-type='quantitative' max='18497342.680093534' min='-5428122.0860724365' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' />
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of GDP:qk]' />
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]' />
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' />
              <lod column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' />
              <geometry column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Latitude (generated)]</rows>
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BA746118-AADA-40F4-8F00-CC7F298FB747}' />
    </worksheet>
    <worksheet name='percentage of GDP and government spending money on miltary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Percent of GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percent of Government Spending]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent of GDP]' derivation='Sum' name='[sum:Percent of GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Government Spending]' derivation='Sum' name='[sum:Percent of Government Spending:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action5_1FECD833F03641748B414C797A5CDEA0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='height' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' value='50' />
            <encoding attr='space' class='0' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of GDP:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='275' />
                <format attr='maxheight' value='275' />
                <format attr='minwidth' value='355' />
                <format attr='maxwidth' value='355' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of GDP:qk] + [federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk])</rows>
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{841B4468-CFE6-4BF4-87DD-9C6FD0057585}' />
    </worksheet>
    <worksheet name='summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SUMMARY&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
          </datasources>
          <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Percent of GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percent of Government Spending]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spending (2020 USD)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Data' datatype='integer' name='[__tableau_internal_object_id__].[Data_B888F706742949CBB92F2611DD5B23E4]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spending per Capita]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_B888F706742949CBB92F2611DD5B23E4]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Data_B888F706742949CBB92F2611DD5B23E4]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Data_B888F706742949CBB92F2611DD5B23E4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of GDP]' derivation='Sum' name='[sum:Percent of GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Government Spending]' derivation='Sum' name='[sum:Percent of Government Spending:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spending (2020 USD)]' derivation='Sum' name='[sum:Spending (2020 USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spending per Capita]' derivation='Sum' name='[sum:Spending per Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]&quot;</bucket>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[__tableau_internal_object_id__].[cnt:Data_B888F706742949CBB92F2611DD5B23E4:qk]&quot;</bucket>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of GDP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action4_C7B8D3707F2F466ABDA193639E760BC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]</column>
            <column>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]' value='214' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#83ac83' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Multiple Values]' />
              <text column='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='20'><![CDATA[<[federated.14noxv20xxwt7r16ls4ii1tbei8t].[Multiple Values]>]]></run>
                <run><![CDATA[
<[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1B4B168E-C008-41AA-9460-8C2275EE9221}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97134' id='5' type-v2='layout-basic' w='98388' x='806' y='1433'>
            <zone h='97134' id='3' name='Top 10countries spending money on miltary in USD' show-title='false' w='49192' x='806' y='1433'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='48567' id='11' name='Top 10 countries spending on miltary' show-title='false' w='49196' x='49998' y='1433'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='48567' id='14' name='map that provides all the information adout the top 10 countries expenditure on miltary' show-title='false' w='49196' x='49998' y='50000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6771' id='17' type-v2='dashboard-object' w='10688' x='50366' y='42839'>
          <button action='tabdoc:goto-sheet window-id=&quot;{2C75DF25-ED40-47B4-91C7-2A2847B54AFE}&quot;' button-type='text'>
            <button-visual-state>
              <caption>All countries</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='18' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97134' id='3' is-fixed='true' name='Top 10countries spending money on miltary in USD' show-title='false' w='49192' x='806' y='1433'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48567' id='11' is-fixed='true' name='Top 10 countries spending on miltary' show-title='false' w='49196' x='49998' y='1433'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='17' type-v2='dashboard-object' w='10688' x='50366' y='42839'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2C75DF25-ED40-47B4-91C7-2A2847B54AFE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>All countries</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48567' id='14' is-fixed='true' name='map that provides all the information adout the top 10 countries expenditure on miltary' show-title='false' w='49196' x='49998' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='3' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0EF57D55-E177-4E94-860C-69AB05D904B9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='16' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='14' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='97916' id='6' name='percentage of GDP and government spending money on miltary' show-title='false' w='49414' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97916' id='13' name='map for spending in 2020 in usd' show-title='false' w='49414' x='50000' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='17' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97916' id='6' is-fixed='true' name='percentage of GDP and government spending money on miltary' show-title='false' w='49414' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97916' id='13' is-fixed='true' name='map for spending in 2020 in usd' show-title='false' w='49414' x='50000' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CD981445-5548-47F0-B815-AEC61DF329D1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='main dashboard'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Data (SIPRI Military Expenditure Database)' name='federated.14noxv20xxwt7r16ls4ii1tbei8t' />
      </datasources>
      <datasource-dependencies datasource='federated.14noxv20xxwt7r16ls4ii1tbei8t'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93750' id='36' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='93750' id='32' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
              <zone h='93750' id='30' type-v2='layout-basic' w='98828' x='586' y='1042'>
                <zone h='93750' id='26' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                  <zone h='93750' id='23' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                    <zone h='93750' id='20' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                      <zone h='93750' id='17' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                        <zone h='93750' id='15' type-v2='layout-basic' w='49413' x='586' y='1042'>
                          <zone h='72690' id='3' param='vert' type-v2='layout-flow' w='49413' x='586' y='22102'>
                            <zone h='9766' id='13' name='summary' show-title='false' w='49413' x='586' y='22102'>
                              <layout-cache fixed-size-h='67' type-h='fixed' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                                <format attr='background-color' value='#83ac83' />
                              </zone-style>
                            </zone>
                            <zone h='62924' id='24' name='Top 10 countries spending per capita income on miltary' show-title='false' w='49413' x='586' y='31868'>
                              <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                          <zone h='21060' id='7' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                            <zone fixed-size='239' h='21060' id='8' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/savar/Downloads/military.jpg' type-v2='bitmap' w='18082' x='586' y='1042'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                                <format attr='background-color' value='#ffffff' />
                              </zone-style>
                            </zone>
                            <zone fixed-size='1069' forceUpdate='true' h='21060' id='12' is-fixed='true' type-v2='text' w='31331' x='18668' y='1042'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='20'>MILITARY SPENDINGS BY ALL COUNTRIES</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='background-color' value='#83ac83' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='93750' id='28' param='vert' type-v2='layout-flow' w='49415' x='49999' y='1042'>
                  <zone fixed-size='331' h='44141' id='29' is-fixed='true' name='map for spending in 2020 in usd' show-title='false' w='49415' x='49999' y='1042'>
                    <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49609' id='33' param='vert' type-v2='layout-flow' w='49415' x='49999' y='45183'>
                    <zone h='49609' id='34' name='Sheet 5' show-title='false' w='49415' x='49999' y='45183'>
                      <layout-cache minheight='160' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='0' id='43' type-v2='empty' w='98828' x='586' y='98834' />
          <zone h='4166' id='44' param='vert' type-v2='layout-flow' w='98828' x='586' y='94792'>
            <zone h='4166' id='45' name='Sheet 9' w='98828' x='586' y='94792'>
              <layout-cache cell-count-h='1' non-cell-size-h='48' type-h='cell' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#83ac83' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5729' id='27' type-v2='dashboard-object' w='12006' x='18448' y='1432'>
          <button action='tabdoc:goto-sheet window-id=&quot;{8CDA57C0-7123-4037-83E1-C672AA31A9A9}&quot;' button-type='text'>
            <button-visual-state>
              <caption>TOP 10 country miltary Information</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#83ac83' />
            </button-visual-state>
          </button>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#00ff7f' />
          </zone-style>
        </zone>
        <zone h='7552' hidden-by-user='true' id='37' param='vert' type-v2='layout-flow' w='20717' x='25549' y='1693'>
          <zone h='7162' hidden-by-user='true' id='39' name='Sheet 5' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' values='database' w='20717' x='25549' y='1693'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#83ac83' />
          </zone-style>
        </zone>
        <zone h='3125' id='38' type-v2='dashboard-object' w='1757' x='46925' y='1693'>
          <button action='' active-visual-state-index='1'>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{E616E40F-261B-47BF-9C25-1C3F5C6A838A}&quot; zone-id=&quot;38&quot; zone-ids=[37]</toggle-action>
            <button-visual-state>
              <image-path>C:/Users/savar/Downloads/menu1.png</image-path>
            </button-visual-state>
            <button-visual-state>
              <image-path>C:/Users/savar/Downloads/menu1.png</image-path>
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='46' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='154' h='21060' id='8' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/savar/Downloads/military.jpg' type-v2='bitmap' w='18082' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='1069' forceUpdate='true' h='21060' id='12' type-v2='text' w='31331' x='18668' y='1042'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='20'>MILITARY SPENDINGS BY ALL COUNTRIES</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44141' id='29' is-fixed='true' name='map for spending in 2020 in usd' show-title='false' w='49415' x='49999' y='1042'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5729' id='27' type-v2='dashboard-object' w='12006' x='18448' y='1432'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{8CDA57C0-7123-4037-83E1-C672AA31A9A9}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>TOP 10 country miltary Information</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#83ac83' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00ff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='67' h='9766' id='13' is-fixed='true' name='summary' show-title='false' w='49413' x='586' y='22102'>
                  <layout-cache fixed-size-h='67' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#83ac83' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62924' id='24' is-fixed='true' name='Top 10 countries spending per capita income on miltary' show-title='false' w='49413' x='586' y='31868'>
                  <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7162' hidden-by-user='true' id='39' name='Sheet 5' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' values='database' w='20717' x='25549' y='1693'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49609' id='34' is-fixed='true' name='Sheet 5' show-title='false' w='49415' x='49999' y='45183'>
                  <layout-cache minheight='160' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='4166' id='45' is-fixed='true' name='Sheet 9' w='98828' x='586' y='94792'>
                  <layout-cache cell-count-h='1' non-cell-size-h='48' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#83ac83' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D530335A-2E65-499C-9D89-F2112CDFCA25}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 10 countries spending on miltary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_95982994789388288:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDE13DCD-2BEB-449B-B9BB-2985DEBD3E41}' />
    </window>
    <window class='worksheet' name='percentage of GDP and government spending money on miltary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48FD725A-755C-4C9E-8C05-A8A79A3CBF0E}' />
    </window>
    <window class='worksheet' name='Top 10countries spending money on miltary in USD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC96F571-4602-4CFD-B162-9C1A401FC234}' />
    </window>
    <window class='worksheet' name='Top 10 countries spending per capita income on miltary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending per Capita:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2F3ED54-71F4-46FB-A1BA-23330616D7B6}' />
    </window>
    <window class='worksheet' name='map that provides all the information adout the top 10 countries expenditure on miltary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Percent of Government Spending:qk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F82A94F-9AD7-4F4C-9611-FF50EB443017}' />
    </window>
    <window class='worksheet' name='map for spending in 2020 in usd'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[sum:Spending (2020 USD):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED842559-38D7-480C-A696-2251D30C89E9}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_95982994789388288:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36663457-C1FF-4A50-8503-9F4DABCC6DD5}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Calculation_128071142949232640:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7712DEF5-4D07-4F6E-95A9-046480672E49}' />
    </window>
    <window class='worksheet' name='summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[:Measure Names]</field>
            <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E71D5F1-818C-4DFB-814E-3BC6D170B650}' />
    </window>
    <window class='dashboard' maximized='true' name='main dashboard'>
      <viewpoints>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 countries spending per capita income on miltary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map for spending in 2020 in usd'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='summary'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E616E40F-261B-47BF-9C25-1C3F5C6A838A}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top 10 countries spending on miltary'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.14noxv20xxwt7r16ls4ii1tbei8t].[io:Top 10 Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10countries spending money on miltary in USD'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map that provides all the information adout the top 10 countries expenditure on miltary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{8CDA57C0-7123-4037-83E1-C672AA31A9A9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='map for spending in 2020 in usd'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='percentage of GDP and government spending money on miltary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{2C75DF25-ED40-47B4-91C7-2A2847B54AFE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d5Rk2Vng+bvvvfCR3pf3VV3dXW3VCKkljdSAkDCDEBrcAYEwyzLnDLOz
      szPLntk9Z7TszAC7wxhYWIwQSAiEEUitVku0rbbVXd1VXb4qsyq9i4gM7+OZu3+Ez4z0EZlZ
      le9Xp05m3rhx333v3e+a737fd4WUUmJjs0tRtrsCNjbbiS0ANrsarRWFJpNJ2traWlG0zS6k
      3J5yuRxCiKaW3RIBsKkSDUxyeWSa0/efoa/L3zDP8PAIJ04c3+Ka3X0IIXC5XE0t0xaAFnPl
      0lUe/egnyEzf4FvnZ3BKE8vTh54MkA3PItr7CM1NkwqMcymg06kZdHd4efyDH8PntGeorcYW
      gBZz4MAQb73xBoPtTpASoTkIzU6gaQq9vUPkgL2D/YDgsSfeT1dmgjdGInbj3yJEK9Sg9hpg
      44zfvIToOsDBga7trsqOodye8vl806dAFQGQUpJKpZpSaCaTwev1NqUsGxspJe3t7S0RgMoU
      SAjR1F7bHgFsmkUymWxZ2fZE02ZXYwuAza6m6VogKSW2eZFNK5BSout6U8tsugAIIZq+W2dj
      A8W25XA4mlqmPQWy2dXYAmCzozED16GFU2pbAGx2NOrAaWjhlNoWAJtdjS0ANrsaWwBsdjWb
      UoPOTY8TDKcYHOgkFIpw6MT9+F1qs+pmY9NyNiUAfX19hOM5kukC9506zNRsGM++HkzTxDCM
      ZtXRxqYpSCnJZrO8dvEcsUgUoSqbEQDJO+ffoat/Pw7F4vr1EYYO34+qqqiqiqbZrgY2Owcp
      Ja+//SZ/+PU/w6FqRNwZ/NKzGQEQvP/JjzSvhjY2LWJ0fIyO9g6++MxXSPgKKBhIIKZlbI8w
      m3ubVCrFn/3jV0nHk2Q1A1OVmJiVz20BsLknkVLyjy8+x9fOP4ueyBPz5HBYCpqpYKhWJZ8t
      ADb3JK++9Tp//cbTxGSaQnuxwesOa0k+ex/A5p7jjbfexOv18sDAcQzNwqs7ERYgwWmoePLV
      ft8eAWzuKQqFAs+9e5aokeTjD36YK7PDuEyNiDDJeEw6ci4y7qqK3h4BbO4pbgzfZHx+ktH0
      DC7NxVOPfxhdM9mj9fKxocc50rWfnKg61dgjgM09gWVZFAoFRsfHSDt0pIDff/nLfO+h7+bJ
      h96PR3HxresvE5EpKBkrqIawBcDm3mBicoLz1y4STcexZHGxm9MMzo1dpGDqFNwSr+WsNH6P
      roElbQGwubvJZDJoDgeHDh6iv6+fqZlpXr16DmFBzmWSFDn2OXoYlUFchoKKwJ1TafP6+exH
      P2OvAWzuXqSU/PYX/xu/9cX/wlxwHp/Px8njJ/jsU5+hR2tHNQVIidfnoy3rIKXmQcJAro2P
      3/9hnnz/BzcnANLUSaQyWEaByenZZt2Xjc2ySCk5d/FthsdGEELwI09+ghvTt/mtr/4uZ8+9
      ygvnztLT3UucDAjYY3YxmZjDp3lQpYIUkml/nEBiASnl5gQgFAwyMzfL2J1R2twW08HWRfCy
      sQGYnJrk0q2rXLt9EwDpULhv6BiRZIxwLMIfvvBlNEXlA4cf5aTYS39HL86cYF6Lk9dMLBVU
      FD7w0BPk8/lNmkMPDBLPjINw0Ob3EV/QMU3TNoe2aQnZbJZ/+MenOTd3mV879gtYlsVQTz8/
      +4M/wfNvvMTBPft5qOckNyaG+aUf+zmkZfHMa/+I+46HCzPXSLl1FASffuz7ue/4KZxO5+bM
      oednpkin0hw6sI9bY0FOnjyJqmCbQ9/tSNlSR/SN4nK5+PEf/gzu1/2cPnEfQgi++dy3+Pmf
      /Cyf+2c/C4DX7eXW5G2CoSDPvfki7b52LgduoagKvRkvvYN9/NDHPonb7QY2tREmGNp/iIcf
      OkNnVzf333cSTbEjw90LmKEb9QlStjQ0yXq4fuM6/8Onfo6p2WlM0+RHPvHDWJbFzMwMkWiE
      r73wNKOBCdp8fg707+Nr736biDNDQssT9mRIZJKk0+lKeXZkOJslqP2n6/42F0ZQeo4gxPaO
      6lNzM8RzSXK5HH/8rS/zf3zu3zAzP8vXnv06125cJ6nl+MyTP8Sz777Ev/gvv86g7ORDRx8j
      nIxysH8fs5F5NK+T9vb2Spl2bFCbVVH7Tmx3FQDI5bJ84cLXyJkFju89wm/+8e/wiQ99D7MT
      M0RlkpxisW9wLz/zPT/Gi1dex8wb/MJPfBZd13nryjscPnSIbn9n3RkD9ghgc9dgapLOtItn
      zj2H6YSUmmf/rRv82I/8KOffe5dnh1/hb771NVIenf7uPt6evsbnfvNf4HS4WBAJVFPwv33y
      V+vKtFequwQzeBO1/9R2V2NTHO4/wPvve4y3Jy7z2X/yaXrbujh+5Bhej5eDBw7y2NgjTM/P
      cPb6OU4NHOH2xB1iRopC3qBb9VGQOl1tnXVlNv2MMCklyWSybp5ls/1IaSHE3bnxX3tGWDyR
      QFNVuru76/Lk83kuX73CQw+e4bV336TD28a+wb2YlommapUTizweT9337CnQLuFubfy1FAoF
      2tvacLvdSCl5+bVXuDY3zD//zC/yO1/4XS7N3+KzkU/zR+f+GlO1+D9/9F/z4nuvkoqnGOwf
      IBQKofgcfPyxj/LQqQeAbfQHkNkYVsI2n7BZOyNzY/zOl36Pdy5f4PXzb/KF5/8Sl6Vx6eYV
      2lw+FIfC2PgYQghOdx3B0HVeHD2HzOg8e+klrgSHmZib5O++8w8VRc22CYDwdKK079muy+86
      pGVgJQPbXY1NYQnJ+cA1/u9v/gG/9+wX0TxOpEvhwOB+rsbvkFBzmF7BIfcgn/+lX+fq5C0s
      AflcnoLTQslL9shubkXH+frzzwAtEABbDbpTEQiHZ/VsOxxds0grBdKOAkLAO6OX6Ors5Dc+
      ++vslz30+btRFAXLssjpeQCmckEUKUi6C7yTGybnMHjm5W/zD898vfkCYK8B6pFmAXNhZEm6
      FZ/Z0noIRUW4727FhJDgMItNVioQkgkS+TThcBivx8Nv/9rnieWS3MhPcmP4Jo8fPsN+egi7
      M8V4QKrEcEgsFSLODH/36jebIwCxhQA3h4fJFszVM+8yhOpE7T2+NN3l34ba3N34NA8P95yk
      Ta9uZKVFnn/7p7/Bq2++htvtRnMW9TrfOf8Sp06c5MEDp+jT/XhyKv6cg716Fw5ToeCySPvM
      5miB4okE0jQRQtjWoGtF84H9jNZFzshzOTxM3lHsaN2GRl4x0OImHf52/vbZv2fizjin/Ye4
      MzXGlatX+JWf+kUGnnuab7z2bb7v9IdAwHR4jtfjV9AdVnMEoLt3gF4ryex8jCP7u21rUJuW
      4HF5+MDQw1yavcnxocMU0jl8qoc9p/cgpWRuIUBGKXBm4D7+JvUcX/zmXxLNJzENg6g7i9rm
      5EDvXk7fdx+z3wxwh0BzpkAuh0owLjm8v3vVvFJaWLHJZlz2nsEMXN/uKuwYpJ7FjIw2/EzP
      5hls6+WnP/Qp3FmV6bkZ3ouPoLocpPQM6XwGPVvgtZkLAMw4o0xOTvDNd55HIjlx8CinTpzk
      zZELtDv9HNT6m78TDNWdu4Y3KCXoGYTT1+zLbghpGVjRSdSeI9tdlbsSM3gDpe9USxUf5fb0
      zsgl/v3f/Q4Ami5oSzuIdhbq8vp0JzlFx1SLzbpb+ImZKZCCn3r8h/nxj3+K85ff5cCe/Tz9
      +ne2fh9ACLGuxi8zkRbWBhAqSteBTRcjTb2htudexgzdQuk9gRACaeQwpt/BSs639Jrl/trQ
      JEnf0lPj045CpfGrhiBqpXjYeZR/0vUwP/qxHwTgfWceYyES5hvXXtj55tDSyNOKvsUMDRdt
      3BUNmmDnLlRHQ23PcgSzc/R7hjZ1TZlPIrMxlM79mypno6h9Jyu/C82Ntvexrbu4AMOxcjvz
      Kx7ceZWcUuD0qdM4HA4sy+Lvn3uaQGIBQQs2wpq9D6C0L20k5TmzlBJpbUz1qvYeR4jtO8/s
      pdlnN12GcLVtW+NviBAtd6VcT9tKySwPnDzNnIzyx29+lTfffYtEIsErV8+RDidw6mrrzKGl
      lMh0CMXf3+AzCwqZDevC1YGSx5KpYyVmULsPr7+QbdqsM4M3UdYxUtyrmIHr1ffYAhy6ws+/
      /9M89sAjxL+e4Mn7n+DW6DBH9h/mpz/8Kd73+Pv49vOtXgMoy/SwUiLziU0XLzTnxhp/k1mP
      FkftP4VY7rnsIjbS+MtdVnkUWHaqLeG7B87w1Ac/yp6hPfzvv/y/MDozwfc9+RTxZJzR0CQv
      vXaW0/edbt0IIIRAeHuWpJclX6xgCGfFpxGu9hW37s3ANZSO/Ttie7+VPVmzCM9O0rNnjYv9
      b30TPvmDra3QRhCiYudTbvzln7VTo/3ufv7Hn/pFvF4vAIqi8Av/7GfRdZ1YPM7fXvg2edWg
      9832rdcCqf33rZpH6di3asNW+u9DFlLNqtY9z1tPf6Xyu7kwgjSXalCgOEWTculJKjsBKSWm
      aa6sZJHwsQc+iN9fP71WFAWn08nQwCAezQUCFszENliDNmnuLYSyY82pzcgoUs9udzWWRe09
      jlAdjT/rP3VXOs+U251E0uFta9gGc7kchUIBi9JnosVaoGKl1t6bSMvEyoSbXaUt32lVu4/c
      E6bHdyt/8OKXuT12Z0m6x+PBlBYOR3Xm31pRlxZW+DbSyCOtjRl+ScvCDC+9mfVwN8zRN4sZ
      urlhlfC9Rl4z+fJzf8OfP/NXZLPVkdiyLGKRKD9w/0cBNh8cdzWEoqL2nihqfPTcmvIrixfO
      QqB0bn6ndr3cbfY5at/mtUvmwvCya4NmYQZvbInD1LuRm/z1pWf5d3/2n7hx+1ZlijQ8MsxE
      cHprXSIVX9+GdP5m4HpxSlUzX5VmoSkPcCYWI6cv/7I3M2qYk0FkobUNqe56pVF2s6i9J5Zd
      GzQLtf++rXOYEnArOs7/+lf/kZ/8/C8zH5hnJhvilel3K1l29GqnUSOU8VmQyw/1ZujWmsr+
      +yvvEUq1RoskM3mwts4tVO05htBcq2dcxHaOctIykPn1h9NfSXiW+8xUJRmtwO07d1BVFUtU
      382OFoBGKN2HivY7y33ec7Tp15SyqHfejgbTymtuxdpo2Q1PKbGS8xtSepQVLY3MbpYTAkvA
      W3cu4lHrO4odIwAbfdFWNoqVDlX+Xk44pGVueDEtY1NgZDfVYKSe3dA05W5fwMtsvGG6UB0o
      3YcR7o71lddg+rvqzjCAgNdmL/KN6y/WJTfHJTIcZGZuho6+o+wd2NjO7EZftHCt8XpCQek8
      uKFrKF0b+14dRh5UB7D+qcpWIDMRcLgRDu+myzJDN1F6jheVGisY6600kjdCMcGVLvXZ5Y5e
      ln6XovQTLFWgu0xA4CqoFJwmUhTDquTVem1kUwTA6/MiFTd9vW11PsEiOYPIRbH6HmjGZVZm
      rWrWkh+utCSm1RrfZWkVdywxDMx8juTcBJ2HTtZdHynrrm0tDKP0ti4Ks5SsfK9CK84TDANV
      SszNPJeuYxjJIMLXV7x2LgamgfD1brxMQFrtmLkn6tIWT3mklKhWDk8qypnD7Tz16Ad44+Y7
      vDz/Lo3s6psiAJMTk2iqRqGg4/c4qz7BVgEKSRRNw0oFEd6ebTcEk7kEIBGKQFVa47tsKAJV
      VRGahlUAPZNceh0h6tJk/8m6Z2OGbqH0HCsaDiZmlh2FrOQcqC4Ub/eKFpZCsPK9au11mUX0
      Tp29/3qxNAdCVYvOMt6uYrFb9O5NxY0quwlHnTzz5k3aFBVvViPjXSTUskkCcPTk6tOXopZi
      B8QL2oC2pBZpFBCas0mVqbK4cZQbn5QS0ba844xS81kz1wtKz7FlPyvOteWKJhNKTW/fyoa/
      2Biu/LOAi/E47MlF8PR18l17P0KYSS5HR1AscCbbwdK2Ljz6ehc768GKTSI8XQhX0Q9ZSgss
      A6EubaiN1IVSz2Il59dkWm3FJ1FXaBzNRggBLRC4Va+7UqPNxZFGDtE2uHUV2iCnjh/hnVsz
      OIkhOsPsS/fgEn1M6MX2eFfELpHSAj27rC/xkp1iU0emgog1eksJh2fNfgVb2fhrsZLzoDpR
      vMXIGzKX2DZTcOHp3AljeYVGqs9y2mQgRs4QWFKnJ93PXM5LAScCCyf5naMGXRHLQuYaq9Ma
      ITRXQ+3DSiE3tpNAcnXnIKVtsNL4AWR+5edhJefrnpllGhTS23eOs7SMimFkrcpbFlIbthNb
      C3cWCuhopOhkItNJASeKNOnW0nz+l39g6wXAME1eur223doyQtWaYvpc7Ol3XviT54dvrJ5p
      EUrHyqOb8PWBqxqaRs+kiI4PV/4u2/1LI485d6nhhpTMxjADV5ti2i2T8xV7sNq1itSz0GQj
      voppdM3/mk/psML84JMPcPLkya0XAAtJKLVyT1RIJ7GMrbOlqaO0wFsvZuhm8+uyCYSiVhap
      jTYZy3b/QnOh9J9GOJZOL4WnE6XrMKxBXy/NLFY+tOznSsc+hHPpHoPi66tbl6XzeeYT63OX
      XZ9tmMAUGk88+lDx+stlSydipDKbN7DaCNGJEbITF1pumbgYKzqOOfce0lq/R5TSs3Md3VfT
      DgnVgXC469KkqWMl5xBO35oM5MzcHIWFs+uql7kwTOHq1+rSxiJhnru1/hFxsYvkCjnpa3dX
      TopsKABSWpw9+yIvv7K+GypjxSaQ0sJcGF498zKs5LXUKpSuQ6h7HtmQ2m7d3zELmAu3132d
      1ShOa6qm52bw5oYEGqFUtGrn/vxFjHx9ZyT13Kbn7jKfQsan15xfkSZCLn/N1Rq/Ik2+58wg
      v/Fvf5Xe3qKadtkRoJBJEgnO8a0XXl1zBcuItiEwC+Rf/c/r/u6uQXWi9m5Oo2TqWdLxifpE
      y0SmqlORYhSK9c90haIinMubsMt8EszCsp9vlJVswqSW4aGhJJq4g4MpNPUGqlxhuiQlQpqV
      U+4//MAe/vnPfKruoLxlnoygt2+QwcEhfJ71u/Y10r9vFDPYurm1GVy7AZ4ZulXncSUL6SWL
      Q2mZTbHLXyvZ1CzjV75cX4fc+iLFbdQIUfH3NcVuaDF1C2Sr3gHe43BzaP9+8ETJdMyQ9ccx
      PSM4rAlUuVD8PiYfONrOkyd7eGKv5Ld+5fv5tU89xofv60Ox8ktUpsuYTkoWohH2HzrBxMzc
      hm7ECq5/HpdPZDEL9UNc/uxv4v3Mn26oDrU0MhNQ+9e+c7rELKCRr7NZWJe6djHS1MHIb+7w
      jHU6C9U+k7N3hvnuQ0fYTPdlJQMId1tThMMK366zj+pt7+Lq5C1+8v0/xJfOfx1dsdBdOrpr
      Dk1XcKY8/PzHH+KTH//eunKOHz/GnoEefuOPniaTyVTCpcByI4AQPP6+99PV2cmjjzy6akWl
      lCQWrdyVNYQ/WUwhmSOz0NhJRVrGmhbFV5453zB92YVgPgcXL6y5jmWEq23JxpxweFBKu6NW
      aHj9PrrSQpqbG0FqI/FZmci66hBKJTfubVc2SfB0gtoci1e172Rdj93e1s6/+6V/zc07w3zu
      yc8gavogQzOxXLc4eayxmvvEsaO870Q/2Vy9a+4yUyDJfCjM6PBl3nrn3cZZakgnooyMTSz7
      +aXwecK54rx0dGFhxbJkNopMNhh1Cumlvev4GFy7WpcUn4swdvk81994YdV6A2BaEIuumOXq
      fJr0Oo9/UnqPrzu8iNBcS32idzKXvlRZB1gLxb0doblaavvT0dHB937go3R7O/jMI99f1VgL
      geKS7N/fePoXiUb4xEeewOWsH9+WUfAKEsEZ8paTtrbVbXj8Hd20eReQUmJZVskkuvjyLWkR
      zYXpdfZjaAb/3xuv8f5DB+tNgUM3UPruwzQtpKsDnIOYloVhGMiy2bDmAw2smu8Jy0JIqy6N
      Uh2s0veXo2wObZomQkosvbSga9Bo41mdgq7hUmSxl87FEZ6uVcq2oGQaLi25tC415tBSNvh8
      DZimufJ9OtuLrpmWUbSTlxZ6dKo4PWlgm1UbeKrWHFpKiT5/DfbeT61Bo1rOn5iC7uOE5l4j
      MDHOw3v3LSl7+tIY/t52OvcWBfxPnrnIzz8K1qJ7L19/uXsSQvDEY+/DsiweLzzG1alhrpd2
      9y0FMpkMzlIjH50Y48b4MB848wTPvfA8piq58Xc3eeLxJ/j4h5/C5XQ1FgAhBB/7xD9t/FAb
      EAsHyaQzJNI5OvweVFVFVYu9gMgnIR9C6XoATdNKAYTrTYEZerD4QFUFRVGQlkBVFDRNo7A4
      by2KUnR0qf28FD5PKX2/aFZ8dInzRdkcWlXVoq2wngREnblBtUilYuItLROpiLprps6exf+R
      j1T+LptDW5ERVP9+hFJzDxOvwNCjdebQtc/DSgZA1dY0EqiqWrnPV0dHeN/+Q7gdy6iOBShC
      wdG1goOKKJlxL3rmQggcg/ejaY7FX0BTVaTbj2npRDIZrsTmePzgoSVlF5I5rHZfpdzJYBJF
      6UQuulaj6zdCURRcLhdHBw5UBCCHzjde/TY/+0M/QTqd5v/6q/9Kt7eT73/ye/iJz/w4ANFo
      lGfOfoeXX3+FVDK1/D7AV//wP/GNF87x7uXVtQSdPf08/PDDdPg9S7aehbsDpX3vst+1stF1
      z5XXslEiMwtYqUBxHrmGnUzF27Ok8Us9gxWtn9oJRa0z9QVIn32FZCLBy88/V19m30ms4A2k
      kccqH/SRDtVt/ZuhW3VO/krbwIamQQvpFNYWhBuRRn6Ja+lKo+FyBFMFLs5sLiiBEIJf/tHP
      8i8/9nPsdRffyd9c/Da/+v/8G37hP/5LkgtxHtt3GqVGDexyuTjUv58z9z2A2+FqLABCKPzQ
      Z34GmQ5jrHMdt57zAaz49IZOgHn+1s1VDciEtxfFPwBUVakLuSDzmXWcz6t51mxRahgGoWD9
      SexCKEVlgFCXVQ2rfSdBqEVPsXhs2fLfvjHD5Tvbf9K70FyoLQg8sFEUReF7P/hR/t//6Tf5
      9//01/jRh7+PD53+LqRlYalwY+YOn//D3+bi5fcA8Hq9PPmBDzI0OMQPfOKTy5tDy1yMoROP
      kQ2sz3BtPSfEKB1L54pr5fnhG/x0z9KzBxpRVqWGc0GyZoZB7/IjUi1FQd684a9QtVVVm9Hf
      /wO6HjkDT3644eeRRBafp3U746FUikQuR/r1N3Hq+o4yd14Lmqbx+EOP8vhDRa3lIyce5OW3
      XuPyyFUC+Sh9bd2cuf/BytQcim11WQHwDp7GH7zA4In1eRnt1JPiDdNgOjZJT9vm/FJbRWF8
      Ah45s6Hv/ofnvs2ejo37Blj5AC++/RWuJ/fzfddv03ni6NYJQOASJGehrbmBjk8dPcGpoydI
      JpP8+u//Br3t3ZXGL6XknSsXOfv6K8ubQuTjAfaefAy3sj3xJi+OzBNJNi/CcrqQ4muXv7pi
      nsS1cYx0vZ5YZqOb2ty6G5BmHisfXDVf2ZcinjW4Fcw05+K5GKxgbv1Hv/ffNxUJ0O/380s/
      8NO8c+0i33zhWf7sr7/M6+ff5D/8w+9yefLG8gIwPjrM+bfPcXtyY6f+3V5YPRboSlwYmSOa
      3FwZy2FlY9BgUy15fRyzJADR0ZI9jcMHy0R6ltnollusNpu5xB0yiaXnNhuGTiZdv0hVSr20
      bkmS+WLHOBmdwGrieQK56b9qWllQnJE8dP8Zfv2X/xUKCh9+4oP88Xe+QkExSWgreIQd3L+X
      YDBEJruxRngnXC/VmcQ0xgoHWsjUMr2AkYMrX2n82QZRPJ2lGD2NMQPXiY0VBUBozmUXsMLT
      1XKL1YogboK5d5ffpHzm5h8ycW1po8ukUoy8+hZz33i9krbYZBrgLy/8Ofo6O4H49PJeeWZ2
      al1lrZWuri4++dTHOXjgIF2dRa2V7lohOrRwehBNNOyauvE3pGJjy35u3t6YzVEr2EnR2MqC
      WEYa+aKiwdTXbE6di6VbUbUNEZmbIja1fW6pwYUQyUL1eSwvAEBWKuzrW9/iaiUt0GoGcuuZ
      61m5LLG//tt11W0rsJLzTTvcu9auv1J+YhakVTqXeBPm1KlA010Rl0Omc1hzxWfy9jNf3Zh/
      wjpJJpMkk/Weh4VCgd/88/9GNBxB1YvL/GUFQNGcaEaG0en1DcEraYFWNJCTFtYiB5poZoWh
      1TTRp4vDZSaV2nCEt+iff2lD31sOpW0Q0WA3eS3ouk4oWF2MWvGlexZq92GEojIeKY6mevwi
      ZqpeVS2NfCkA2AqMvbAhe/7pUIJvv7WGkec7z4JplupjInPN9x1YCc2hYZj1An7u4nlGEzOY
      SjHMojutLC8Alp7nqR/4MU4d3biufl0IBbXvJMGJ24xfKVp0vj21tigGk6O3yWY2NswXxpef
      HzeTcEYnspJAA/FYjNdeqgZvVXuOEg/N8/rX/mxJ3i+d/xMAZCGGNLYu2kM2rzMfSSEXRZ1Y
      juQKm3utxOP20NXZWZdmGSaejIKpSnSnxNCs5QVAdbh45/UXGZtuoB6Tktu3bnBzpDiXm5ue
      4ObwMNl1Wkw2Ip9OkY41nkJYsakNxZRfjUsXL/D2G6+vnnEdXPjb18lEq4v+SMYgmmld+I8y
      hVfOEo6uLWbQeHT5Ndlq6MPPYs5fBuDlFU69v3Xl0oav0Wy8bT5ybWCpICxQEcsLgJ7LYCru
      hvbVUlooLg8OtThnV1UFS8+RzRuV4Ljl+bwlrcq5rpZpIWXV+rH2f9EScen5r1LKisWg5R/C
      VD1Iqn4fliyXXQp0u8ga9M3xOLFssV5AJb1sDVq2pw2HgoTm5yoBc2vrKKVVCfhb+/8/v/Q8
      M9FIxYpybnKSqfFRpCWhlFa2Bi3XySqlU1d+MRKFpHqv5f+VZ2BZWKa16HnVeKiV/o6MDPP6
      yy8tebZla9BymiUlX3r7T4pXrVl7lddw5XchLVkp2zCMundU+gKB7BxW6Z1btVa8poEsPfPy
      sy+f5Fj+LlCx/F1sHWsEA+t28FmJJ848xqcf+zgAQoJUVlgDaN4O4sEppqYb2Af8SgMAABj0
      SURBVM4IhUw8QiKVI5lMoqlFK8l8Tq9YgpbXAYooWmYKIVBUpc4atPZ/0RJRWRLjUQiBsii/
      oHraqiLKZZcC3S6yBi2XU94FDIw9x+zw31WsQcumDno+Tz6XqwTMFUKQDkyTmh2vswatr7OC
      UrrXcvmqoiAUAaU0VVURSrVOSjmvECgyharIismFYOm9Vp6BoqCoyqLnVd3Wr1pyglCq+TLh
      FFhUrEHL6YoohhMX1K/Zymu48rsQSvHv1HQMVSh176j0hcrzL9ezXD8RHgYzj0gUHd/L7UCU
      95nL76amvuU6aJqG9s75yvtpFp/47qfw4MBSizaIyzvFx2agfYhceukcTgjBAw89yiNn7qet
      rY3u/iHuf/ARhvrW4cqXy/HWP35niQHZcsykJxiOXVt7+WvgLy68te7vGJZRce7ZDJnEFO89
      /emmzt9TZ5dG8bj5wnsY+foFaP6N/44srLyT+8e/97sAWFMLyHCC+MRCcWRbB2r/aYTqQqxg
      DVzLW09/bl3lb4Se7h5+7IlPAqA7Vzol0jfE6SEvh0/c3/RKZC9eJPGFLxA+/xb53Op7DbPx
      GS7PXySprz1gklnIoeeatF1fQ9ZI81bwlaaX2wzSZ9dWL2vhNiuds7ZZon/xFWStVq7kIWaF
      bjb2pd5ChBA89fiH6HN1FkesRpmKcYFeIpTIcGjvwFbXcQmz8Wluh4oq0kLoBazC6j1wJhwk
      FVh7zJk1cfELzS3vHkWfnGw4d1f6TjX0uNtq+nr7+K+/8nk+9cD3ND8u0HrMoTeClQ/CMo7j
      y5pT2DSFc0//5XZXoWl0dHTwuR/56eVcIhV+5Mc/u6GCt9MceieZU6yVqVgU/S454T0yN0nf
      dleiiSw7BWomtxeGeWNs+VEkm0ljbFcg3A1w9k5xo8pIXMNIXNl0eX914V3i2eaPXIkro6Tv
      zDa93FaxXWcWt1wAUvkU4fTyc/bpsVEyLTqwuhW8UhIAy0gg9Y35CTSOSGdiWcUQ5dLIVWLp
      N2ItPtR6PI2RvnumhNtlgLj9K5ImIw2LxFRzjNGaQWR2qa1944h0KorSw/TEGHPD72FeHUXm
      G4+MVnikybXcPG9/8xe2uwrrRsqV1KAtQI+80fJrWKZFfHL9p49vmrfebJy80sJR1xtqS0T7
      HlCdTF4oRl+Q+RRWrCpIat+pzdXVBoBcLtd8AVhJC6SHWy8Am8UKJ5D6Bmx2Is0XuqmLRQEQ
      Lv/Sc9BsNk0qnW6+AGy1FigYCDA12TyLThlOgt4crUzZmSWazBFr5N7pcFRtOtaAFR6t+Agk
      CjHeXWg86mQzaSZHm3/2wL2GEC1aA1wZXd3BejHSkiTmV47R2YhgMMD0xNaYNK+X2FgxDuq7
      w3NcHNm8ilbpOYLQim6JhtSJ5huPOqZhNFQsyHwcax0HUtzrzATmWiMAV8fWLwCmbnD9uYst
      qE1zKLz7p1ip9d/XTkK4OjYVi2ktxHNZsvrOV2tLKTl7+Y17Twu0LKmNRbcoY0XGiw76Nity
      fX6WucTODyOTyWR47cY7u0gAbi/vtNFM9GQGI9FcIzw9myYytrNOobzbcTgc+JRlokPvVDKJ
      SQxlZ2/upG5O4cuoxXifTUKaJoXc9h1yfS8SCAUppDd8UrxkdmqciZnitCIRDXHjxg3S+da6
      /E1c+8uGQZxs1s5ENEcgtbUO6juR6ZlpOqRnYyOAtCyyugRZdET3d/TQk02SSuVxa6JuL6Ds
      /lZx+6t4w1XTa10oa3+KRX8Xf5acB8tbDWXXy1IZle9RdM+Tot79ruwyWXXuWFpPs8a9T1pW
      8ejRcg5ZdlE0K9cVJZfD2npSPqW8Uj4Vl0i5yJWRSg1K92JZSCmWPMOyS2T5e4tdGavPh0r+
      Yh2ouESmcgaaYVXcJJdziVyaXn42S10iK2UtKsdch0ukLLlRlt+5YRiobOzQ8tWQUhIOLiDV
      japBhUDXdfTSan9hfhrp6mGgx1dxh6y4NFLr4igqau9al8daF8rVf5bd+Kp1ASouebXXLbvg
      1eYru0wKpVLAknqqNe59xTIUKo58ouyiqNZdl0X3VXYVrJQL9S6RLMpfvQKzX3kRM5ld8gwX
      u0QudmWsPJ9SsrwxjTCsSr0VoVSOTC3XeTmXyKXp5WfT2CWy/Fxqy9FUrXLfsLpLZO27Lrq+
      Nic6dyPmQwHiZmZjAiCEwp7+bvqH9pFMJnE4XcQWAqSyd8fQmg8+h1XYOfZCdxOT515cPdMO
      R0pJOpuh4DA3vghu76oJM97WRlfv9nuOrRUrHwAlD0rzz7m12flYlsXt4REUzwqBsWxs7lWE
      EHhcHiyxxdagy5GdWfno1K0mPrdzp0dm+M5dG5I9Nr7Q1Dg/G0VRFAb6+/FltZ0hAPNff227
      q1DH1ZrDtsfn49yZ3TkCUTj3+xs+sCOWynFhePvcRuPjCy31F18rQggefPBB3OYOEYCdzEQg
      xp2Z9Rvp7US2WwB2Eh/5yEc4tPfA3bUTbHN3MTszTS4QJZpZ/VjbrcblcvGv/9X/bI8AdyXz
      7213DdbEM//w91i5AoXw6gHNXp79dnWDbItwOBy2ANyVzO9cs/GNEsptzlp3o9gCYLOrsQXA
      ZldjC4DNrmZjArDohJhUPMzl67bDhs3dx4YEYPEJMf6OHtwOpc6UeD3m0HLR3yv/XN0cunzd
      svltbT5qyiklLKlnuT6131/JHLpsDlxbz5XMoUdrjjdtZA5dqUcDc+jiteTK5tB11sr19a7L
      vwFz6Po6V++zUfmN8pffX+UPSubQi/IbhlHK11rN0AbNoetPiImFg0xNTZFI5zZkDi0W/b3y
      z82bQ9f+2cgculyf2u830xz6Ly58sfooG5hDV+rRwBxalOyd12IOXXs/jcyVN2IOXV/n6n02
      Kr9R/vL7q/xB6VSdRflbbQ5dZkMbYeUTYqq08dTHngKo9FA2NncDLQmMtZ5gTzY224mtBbLZ
      1bQkNqg9BbK5W7CnQDa7GnsKdBcRy5pY9ujaNCzLsqdAdxOXZlPkDfvZbpbyHo9pmvYUaENI
      C+5St0SbIqZpks1m7SnQhjDyyLs8UvRuR1GU1hyRtCumQA4PomPvdtfCpoRlWWQyGZLJJOl0
      etX8QggsyyruODe7MrtiCmSzoygUCuRy1dD1UspKNDqn04mmVZt5OaKhx+PB7XbbPsE2dz8O
      hwNFUSoxSAuFaoTCXC6Hx+PB4/FgGAb5fB7TNMnn86iquj4BsPJJLly9Q1tHByePHeLWtSsk
      c5Kudhe6VDh46CgeZ/PCgtvY1FK2Eq3t0cvpK4VbyWaz6LpesVYuYxjG+tYAhVSEwWMPoClF
      SXO429jX2YavtxerkCYaz9jm0Gswh65dI63HHLqSf5eaQ5umSSKRIBKJFJ9lqcdXVbUy5VkO
      wzDqGn+ZdQmAq3OI2MR1HC4fyWQKTRiE8gYOXUcKFY/HaZtDr8EcunaNtB5z6Ep+2xyabDZL
      LpcjlUpRKBQqwrBe1jUFEqqTB86cqfzd1tZW+b2nf2hDFbCx2Qj5fL7ye+2cf73Y+wA2uxpb
      AGx2NfZGmM2uxrYFstnV2FMgm12NLQA2uxpbAGx2NbYA2OxqbC2Qza7G1gLZ7GrsKZDNrsYW
      AJtdjS0ANrsaWwBsdjW2ANjsatYlAFJa3Bm+QShSPPYyNDfN7fEpEtEQN27cIJ03WlJJG5tW
      sS4B0OOzOLoPk4iGAEkiXcBtFNA6eujpcJFK5W2XSNslcmn9m+QS2QrW5RGmOFzkE0lMo/jy
      daPoiROdn0Zz9TDQ4wMau/Ntm0vkIve7ZrhEhmfOEfb2113Xdolcr0ukXNUlkp12Qozm7aU9
      PkP74SMkkykO7hsikbNwUiC4EMDn9eD3OFtV1x1DIbtAHgXwb3dVbDbJ+uICCcHAnn3F351F
      f2BPqQ109Q40s142NluCrQWy2dXYAmCzq7EFwGZXYwuAza7GFgCbXY2Qpd0HKSWpVKophWYy
      GZxOZ128RillJS773ZBe/tnKdFVV6zbb6vTrUIlhv5vSG8X4FELQ3t5OOp2uiwjXDCpqUCFE
      XajDzSClxO/3V24wlUri97dXPlt84+X0XC6Lx+OtS08mkw3rtaRhWSZ53cDldC5bfj6fw+12
      k83m8XjcdeUU69ic+2+EtCxMy0JR1eJmGMU9znQyibetrZIGYOo58qaKx6VVhMU0TRRFRVHq
      haq23is922wmjdvrRxHFZ5VKZ1A1B36fr7JxduX8K6Skj9MPnqHD42hYznLlA3V1LKZbzE5P
      0ze0D6dW38mk0yl8/ra6ba5MJoPXW//+i/fYnI65ES2ZAtXuogohUFWt8ns5PZVKVXcdS+mm
      adWlLfe/kE2hS6U+XVFxluLEl9OkZZDO5oovTVqcf+tNRkZGmAsuLKkPLL3O4joul5bLpDCs
      0ueJKJMTY4yOjpEtmJU8F869xLlz5whE09XvzV/j9vAt5sKLn4WKqiqVug3fvMo7b7/BrTsT
      S55tbb1XeralN1OXPjU+hlWT1tU3iEtdms8sZMjqVt11a6+jKAo3r1/hnbdeY2RspvL55OgI
      Hb0DjAzfWlIfUf5Xk+5yuRq+h1bS0gMycuk4k7NBOnv6aSDYFUzDQKgqHo8HKPZQiUScZCqD
      5nSvaWSSlkk2r+P3ehp+rqgaD5w+zUIsSU9PTyU9ND9NNJHB39FDMwbAto5ubt+8gqu9j0g8
      hbe/E4ADR08Ti8Vp97kreVOih7aeAv1d1R3lTDqFYZi4vdW0zq4+fD4fUq0+xJmZafbuGSIe
      S6z4fEw9z+TUNLFEmjOlwMbSMknE4/g7ulBL7SuVSuHy+BkY9G3ojIehvQfw+7x4O7sqaYND
      Q0zOTNE3UA2cnIiFSaSyKJoTX82Im8vlyGWzdNR8fzGapuHz+dZdt5Vo6SJ4cmqGw0eOEA7M
      VdKmxoaZCSygOV3VjNJg7M5tLl+7BYBQVNxOB772DnLZbCVbLDTD62+e4/rVa+g10bAvXXib
      m9evcOHdi+RKBqm3b4+g51JE49Uzo0LhKAODA0zcGUEv2TNl0hkURdSdLZVYmOHW6BSKWu0f
      YoFJrt4cIZqo5jMLGd58/SxXb43Vmazs2XeQQsGkt6v6ggXFIT4QCFbMu1xKni6XxUK8/lyr
      VCRAOFk88scyCty6eZ1sTscsG+AZeebnZhkeuUNHT2/le8GZMW4MjxBPVZ8ZlsHs7Czt3b2U
      ZiZYepaFeIbu7mpj8/v9SCFIhMPoZvXhXn7vApm8ias0hTH1PK++epbRO8PMBiIApNMpkCaK
      w4PLWX1m83OzSCm5c+sqkzPFQwX9Pg+hhQipVPWe87FZXnrzIsFgiK2mpQKwb88g75w7R3t3
      f+Wld/f0EZ6fJhSOVfKZhoGFwn2nTgDFHmpubp63Xn2JvFVtWW2dvRzYO8TAvoN4ajqpzs4u
      VIeboYH+ynzW73YwMjZLd3dnJV+7z8V8MMLA4ACmJdHzWbr6BvD5/Az0VxuSy+MjNDPO2FRV
      cDWHC1OvPxpVCEFv3wCqkFg1RouRhSD5XIZkphq2u1AocPDYSQa7fBil9mVpfgLxPN3t1Z49
      nUpSwEmnv9hBGIbB4aPHae/opLen2GAVzUVne1txOlgKDW7peULhWMVQsYKiMTg4iDQKlXeg
      OD3o6Shz88E6W8vw3DTu9nYMs5rqdrvIZDKYpRtUNCfHjh6lq7uPQweLBwX6fH5CgTncvrY6
      Aejq6gIEA3v24lCLTc3IxMgULMLRaLUjaO9jf48P1eVpte3bEloqANNzAe5/8AHmJ24wOjEL
      wMzsHAePHKWvp9gwi1OXAh63i3g8DhRHgMG+Lh75wFOcPLyvUp5AEk9laWvzUzs1zGYzKKrG
      4L79pTksBANzqCqEFiKVfIP7DpGPB5kPhsgXdFTNgVnIE4vHyOSq2oVULMzxM0+gmtVe2FSc
      9HS143JVjf0i0Rger5+BgX60mvq0dfbgdmqImuYVj0dZCMyB04ej9NRzoREWFhaIJKo9djAw
      h27oFZNmh9NNu89DMpmgYFT9LVRFqTN7Vhwu+vv7OHHyFBjVe5FGjlTeYqC/r9K2zEyUlA6F
      XIaato63rY3w3CxmTcG5bIZEIlkRcCEEXV3dKBQYn6h2EA5VJZFIVEbW8hsDiebwMDRY7GAU
      p5dDhw/z3e97tDIiFdJRspZKMpFotfXzEloqAAf2DjE/H2TvwaP09XSj59KYlmR6appoPFnM
      JATZTGZpxRxuQjNjjE/NVtKE6kDoGaamZ6kZpRFi6W109/SRyxbo7GyvpM1NT9DRv48D+/fj
      cTmQUjIzO8fQnn10tlXnlt17DpMMjNG/Z3+xLpoTr9uFoigk4olKvp7eXuLRBUCpe2+xeJKD
      R47T6a/O9xvVse/wAwz29dDuK/b2kdA82UL9SSdCUQgshLHMPJHgQiW9aCtvkUhUNSThUIBr
      V6+gOKvrIMXpxUWO2UC4UsdoSsfvUukb3FMRRgBpCQ4eO4G3Zg3g9zhxefxFP4YSmWSUazdG
      6eurrqUOHj3GwuwEd27fJluan2YyaYRQyNRML4XqIhqYYnRiqiLAc/MBFJaqgbeClgpAMLiA
      ohRPlmn3u3G4fWgqxOMRwqHifE8IhQ6fg3AsRaBmDqioGt3d3cRj0UqaNHUiC3NIKcjWdDQe
      jwfLNCrDNMB8YB6/z0MkUh0BkpkcXR0+Rq5fYm4hjmUa+NvbyWVSdQ0pOj/BdCRDOFjt4coO
      LdlsVVgtvcBCYI7Riam6nnRwcICF4Dx6baKRw5KQzlWnRZqzjYNDPUTixWt7vV4ymTR6Nkk8
      XRx9pGWxf99+ujq6Gdi7p/Jdt9uDANzuqpB1dHSQNyxS8eo9m9kYePuRuXiljrFkmp7OttIU
      pYq/vYNIYIZczQIrvjDH7Tuj5I1q2nwoyqMPnyZUel9GIU9oIcqefQc5dfIYmiLIRmfQug5w
      /NhRTp08Vn2OUuL1esjnq89hoK8PT3snA33V6epW0VIBcKgKxqKjm/r793DowH56eqtzbtXh
      QlNERTcPQMkjq6wZgmJPvG//ISyh4q9xO8hkMghpkckWG002k+G+Bx9l/55+2to6Kvn2DQ0y
      Px/iwNFT9HS0oWoOJsdHSSQSJGt6qfaeQXq8Ki5fafSQFropEJZOX3+N2bcQnHzouzh1eKhu
      6hoKzpFKJFiIJStpLrebcDhSmSNnU3FGRkaYmI/SVRp9XB4/DzzwACdOP8RQd1ELFA1N88ab
      57g9OYtRWoOE5yYJRlNIBM6aOXdP3xA+B3jbqg3b4e3CaaZwtXVTVsU7VUFet5ianKxbu0hp
      4XC5UZXyHkOKvUcf5MTRA/hqRoWhgT6mpgMM7R0EYHJyHCd58kJjbGIWhyqw9Dy3R4aLaudA
      deSanZ1lYWEBp7P6AqVl0NnuZ2omwFbTMjWolBKH200uFkTK4lCZjc0xPBZASPC3G+wZ6EVa
      JnfGJgENq/Q2pGUycnsECw3NWRWKW8MjnDx5P3Ojt0gVoN0J4fACJ04/iJnPkNaLL25qcpwj
      J+7DSGVIpzP0dfoITd0C/xBOr59UMsbQ4ADp+AJnHn0ChMAsFIXHzKcYn4tRyKUJBuY5uHcQ
      I5dkPpLB63CRjC4w1F+8H0XViIbmkUKlq7967wOD+3F5fThKdV+Yn8HRPkAfkcqGl8ffwfHj
      VeEESGcymHqB2ekJOvr20uFz0T2wn0cVF4FAgGQ6R3eHn+7BfRSsGdLpNJlsnp7ONiw9z9TM
      LPlsiplAkH1DfQBMT02QSSeZmw6wf99eNAUOHT2x5H0FZqeIJXO4nRpqqY66rtPR0cbI+DxD
      e4tp0+N3aO/sIBJLorojtB8YYs/gIHemg5w60kMkVfIT6d7H4z0OHGr9tEZaFh0dnXU7uoFo
      hryRrlOLbhUtE4B8coHx2QUy6TRneos9kp7Lomgu8uk4ul5sHJapk83r5PMpHK5ib28ZBbIF
      g3yumgbQ7nVx8+YtLBQGSh1IMhoChwcjEcBwdtPZ5uXI4UPcHr6FUJ0cO3YYAJenjcnZaXTD
      qOiaU7EQkZxGJpfHqSn09PSiaC4y8QX8Hd0YpcejuduwMrMkEDi91TXF7Mx0cWdXre6aRkLz
      hCJxCEfYd/AITk1BVVUmbl7F37uvbsd3CZaBKQXoGaKpLB0+F5H5SUZmonS3+/B7i2uFRHie
      0YkpnC4PJ/cWRw8pLULBAL7OPvbuqerdY5EwGcvJmftPVRadjQgtLOBzwFTEwdD+YsZAYB5T
      1xnq9rOQKjDY7sLv9zE8OsPDD50ksFCcDrr9Hdx/qijMfd3F8hTN2XB60TswhCUld+6MV9L6
      GqRtFRVboGZSu6Wt5zNEkzn6e7sb5pVSkk6lkBS1P36fd1Gaht/XeHOr/P3A7BTC3c5Az/rm
      kKahV6ZNDqcLt2t73TnzuSwFvajp8Xh9aGrjGaqhF8iWtFZOlxuX01ExbwBQNQfe0nQyk04W
      FQZCqTN7WOnaXp8fVRHkM0mSeYnXqeLyeCtTo82wEJzHRKW7uxuHpi6bVku5PTXbDghaJAA2
      NncLtjm0za7GFgCbXc3/D9LmNVxhmZMgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      4LNUqF79H/1TFLQpjbbhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 countries spending on miltary' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 countries spending per capita income on miltary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10countries spending money on miltary in USD' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='main dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map for spending in 2020 in usd' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map that provides all the information adout the top 10 countries expenditure on miltary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy995Md15Xn+Un7vKlX3qEKhgDhAQI0oAElUZRESexWq0c90d3TO7G7M7O7
      Ebs/TcT+LRuxs9PdM9uzo261pO6WKJKiJ0CQcIQhARAehfLmeZvu7g+vbuK9cqgqVAFFEd8I
      ROC9ynx5M/Oce88953vOUdLptHBdF13XCYVC2LaNpmmoqspjLA+e51GtVgmHw496KI+xQuiK
      oqCqKpqmEQgEMAwDRVFQFAXLsqjVaoTDYVRVRVGURz3eDQchBL948w0sx+Uvfvw6iqLgOA6V
      SoVoNPr4mW1wqI7jAKAoCkII/w+u6+K6LrZtk8vlyOVyuK77qMa5YeF5Hi8ffoaffvdVX9iH
      R0f4v3/9Syanph7x6B7jflCmpqaEqqqEQiFM08RxHHRdR1EUstls08GqqpJIJB7ParNwXZe/
      ++dfE00keOXQ0yQSCf9vlUqFYDD4+FltcKhQn/1N06RcLlMul8nlcuTz+XkHe56H53kPfZAb
      EflCgXc+/JCyZRFVVN54/72mFTQUCj1S4a9Wq4/f1TKgAgSDQd/ckS9xoYcXiUTQNO3hjnAD
      QAjRJNzy80Q2jeq6pFpS/NnrfwTUBU8ee2dkhFt37zadux747Nw53jr+MbZtA/V3949vvckX
      Vy6v63X/EKACGIZBuVxe9CBFUQiFQgQCgYc2sI2GRiGenpnh1++9i6FqqAK+uHaVfKHAlZs3
      +H9+809UKhUsy+LkpS/46MuLq7peuVKhVCot69hAwMQwDFRVZWZmhl+8/w7Flhhnh4eQe7zH
      WBh6IBCgVCotuVyGw2FM03yIw3r0GJuYwPNcwqEwP3/jN+zftp0jzzwDQK5QQPc8pvBAVahk
      00zPzJDPZhlMtXHzzh0ujAyRN1TadH1V13/nxCcowI+//Z37mlIHdu4CwHEcfnvqU6qxCKqi
      UAvA2Utf8vTefY/3IotAB5q8O9IbZJomlmURCAT8TfE3AdVqlWu3b3Psy4u4xRIdiQS1SJhz
      o3fZkd5GKpUiFo1ghkKU7twmlkrx1K49TM/McGpsGCMaIX3zOmXPJRkK8+L+1Qnfd587gmma
      Kzp3cnKSdC5HJB4FQDV0To3epb+zk+7OrhWP4ZsAvVar+UEvTdPQdd3/Fw6H/ZjARoDneese
      oDt/6RInr3/FYFsH8b5+RsbHUBWFPX39pFIpAD47fZrDO3exZ8tWOjs6MHSdm3eHCKSSIAR7
      u/vYuXXbA5mMqwmqtba2ooaCTd9tCobpaGtf9Tj+0OG7QReCYRgbIpgj7e9qtUooFEIIgW3b
      GIYBsKbjE0IwMzPD0MgIb3z0Ae39fXz/qacZ6O9HURROnDmNcF1ymSyHDx3ijfffI2vq9GkG
      nV1dZEslXnvxpYfuLLBtm7/5h79HDPQ2PY9+ofGDF158qGP5OqHJQFUUhUAggOd5CCE2jB9b
      el2kl8o0TWzbxnVdPM8jEAigadq8sUpX4EpmU0VRaG1t5Z3PThBOJNjV2UNfTw+KonDtxg1O
      3bnF9/cd5LnDT/PrD99nJDNDsiXFaz/6AaFQyP+Nh41isYhpGlQdB6EoKOUqMUWlpqi4rvuN
      9N4tB00rgKRCCCF8r8KjRKNLtlwu+24+XdfneTdM0yQSiTQJn+u6q6ZwWJbFybNnOXzggL/S
      qKpKNpslkUigqiqfnD1DQNdpTSS5PjLMpq5utm/ZstrbfSB88OkJhqfqe4DOZAvpUhE9EaMG
      DKoGiUSCF595dkNMaBsJTSuAYRgUi0UA4vH4I1EAOdurqkqtVsO2bUKhkL9RV1V1QUrGQoL+
      ILOeaZq8+Nxz/pigPrO3tLT4xzz/1KF7xwcCJBsiwQ8bHoJi0ETXW0iEouQSUYSqYI+Oc71a
      I2iqdN68yfatWx/ZGDcimiTccRxCoRDRaPShL5me51EoFKhUKriuS6VSwXEcbNvGcRzi8TjJ
      ZJJwODxvbJqmEQwGF/nlB8dyHAE9XV2EZ02g1eL2nTtYs6vcStESihAvVtidbON2qQCqgl0u
      U80XCPb3omg64jGXax6aFKBarRIIBFbsflsLWJblmziu62JZli/ojuPgeV6TYjQiGo0+cnNt
      LeB6Hu9//PGqzj2wbx9//pM/ITszTa1SqdNbIhHadm5HMw2E8Pzn+ZjUeA/zvECJROKRbJiq
      1SqVSgUhBLqu47ou4XDYj4ZGIhECgQCO4yCEwLIsHMchEAgQCAQe27YNePv4Me4ozUJempzi
      z4+8hKKqvPnxh7z09DNs7t/0iEa4cdA0bUou+1zuy8OAYRi+GSPH0Ajp9dE0DcMwCIfDxOPx
      DeOp2kjY1tdPNZ1peobBQIBIJMKnl74ga2hcvHiRsfHxRzjKjYEmBUgkEo+M8qCq6ryNbKVS
      8U0by7Iol8tNG9K5gi/dt990DPb389OnnmFvMIrIFxCeB6EQd4eHGS3k8YTgll3l5KUvv/GM
      Ud8E0nWdeDyO4zgL+tTXG67rUqvVqFarQH1FkLZ+o9CbpulHqCUaPUeP0YzJ6SnujI5i6jqm
      bvDR2F2sUolAPIbnuBxMtvLsgYOPepiPDL4bVArUoxB+wA9oyWBXNBr1PUIy6hsOh3EcB8dx
      fN9849gfYz462tp9KsRbnxxH0TWCybq7VjNVZoqFRzm8Rw5/ynzUkUJd1/0NsJzJ9QYmpQzM
      NXqLGvFYCZaGEIKJYt4nO3qOi5fN8WT/AHeGhr6xppAvYY/afFAUBU3TfK6PZVkUCgXf1vc8
      z6dq2LZNuVx+XIVhBRgeHSEvXDY50BIKE49E2XlkG4Zu8MFHH3H6/Dn++LUfNk063wT4ewAZ
      /HrUKwFAoVCgVqv5Y1EUxc9F9jyPXC4H1BmT3+QknZXg1p07TOdzHN6zd8HVslKp+FymbxJ0
      uGc+1AlVJoFAACHEI1OGYDDop2lWq9WmF9ZYvULGAR7j/tg8MMDmhs+5fJ6vbtxg/65dBAKB
      b6Tww+wKIH3rUpjkMvio7GrpEZK+/1gs5m96bdvG8zxf+L8JS/bdu3fp7+9fs98bm5jgnz8/
      BeEQWr7IK3v209vT843L+oPZTbC0uavVKqqqIoR4pJtKRVGoVqt+yL7R4yMV1TTNb4TwA0sK
      /xeXLy26gV2I8lAsFnnj7CnUeAxF06g6DsPDw1z44otvZP6wv/MVQlCr1cjlcliW9SjH5Ncf
      Mk2zSfgbsdj3GxXVapWp6ek1/c1cLodVrS04Wd0dHuaf3vzdvMDgp19cwJ1NmbSLJRKuwAiH
      6Ovr2xD7v4cNHeouUCEEsViMyiyR6lFDmmV/CMSt4bEx3rp4jprweH33fvr7+tbkd+PxOPv3
      LZxzHI1EeHLLVt9bpigKrutyY3oSNVWndJuxKOVQkPPFLOkrBV6OPkOlUkbTdAxdn5df8ahR
      q9XWPE9FB/yZVrohN8pNy8yvrzPy+Tz/dOIYZlcHuucxnp5ZMwWQruO5cByHCxcv+slNu3bu
      9P8WNYM0FsBRdZ3y1DRbd+7lP//uN6jRCAiBVrP42Usv05pqXZOxPiiEEBz/9FOef/bZNaW+
      +5vgeDx+78vZgrmPsXIUikUcx8E0Ta7fvsWJOzdRIhFUXUMpFPmLl779UOIX5XKZ4bExujs6
      CAQC/PUvfwHRCCRiqHOUxq5UEbaNEbuX/+1aFsbkDC8fepptf8BJNDrUtatQKKBpGtFo9FGP
      6WuL4598wvWZSUqaiq5qiHAQLRFHeB5GucLLu/auSviX65QQQnDlyhWu3LzB7bFRUFVe2Luf
      u7kMpVKZaF83zLqRG3/PCAVhTjUJRdPIIvji8uV1VQDXdXnvk+M8MTjIpt4+zpw9y8EDBx6a
      g8O/SmPJkY1iAn1dIITg+KlTfJWexo6GMWRsQgiUSpVdLW0cfGrnqoTfsm2OHTvG4OAgWzZv
      XvQ4IQTVWpW//+d/IrFzO4GBfpyZDMduXSfU3kr0yW0ruq6qaQTiMUYta12CZPl8nlgsxvsn
      P+WGa3H74nleLJX5eOgmaavK3s1b6e7qWndZbEqIEUKQSCS+Me7FtcKHJz7hilVBNe49N5HL
      s62ljQPbd/j1hFaLpVYAz/O4eecON0buMpTP4obDsxlgC9PCF/udRsatRGl8kurwKP/n//5/
      rLlJ/MHxY2zeNMBvTn2K0Vkn65XujhDu6ULTdexyhZ3JVl46+JTfo2I94L8xWQnOcZxFN1eP
      0QwhBBcvXeLC1DjBtvpm0XMcOjz4zgsvk2jYV60WuXyOY5+d5Eevvjrvb4VikV+9/y6FgIER
      CUMijjanz8Ny7mExhDvaMNYpJqQqKoauozVk80U3zToHFAU9HGI0l2F0bJRjZ86QaG3lwLYn
      6GhrW9MJ2v8l13VJJBK4rkupVPqDybNdT7z30YfcqJYwW5JAfePY7Sq89tLRNYuqhkNhdm5r
      tsGFEBw/cYKxSolKSxxjTm7Eg2Du+Vu6ex7o9xbD0eefp1QqocwGXuEezUUBnGqN3kQLkUiU
      UtCkoLjcPnWCsBng8MBm9jy5c+kLLBO+hMuE841SDe7rgEwuhxcMoM7GUSpjExw9dHhNKQWG
      YbBl871aQ/l8nt/89rd8cvE8M8bKah7NPXapmknC82ixXL518NC6yUIkEuF7u/fiVmuIdBYl
      k2OrasLIBLvCcY4eOkyqpYU/O/IibY6HmojjVmt0rmGpR38FkFlVjR1iHmNxVKoVJktF1EQE
      u1yhNjXNkSd2rFltoFu3bzOwaVPTKmxZFqdPn+b0xQukdj05z525HDSSCRdKIRVC4FoWHZ7C
      /sEt624FDPZv4sVSGTMYYNumATRNm1cDNh6P80cvHOXG7Vt07GunJZlcs+v7XKBGBdiIwr/R
      cn1v3LyFFTBRdR3Ptjn65G6ePXR4zZ5dT3f3vLTPXC5HPJEgFo9RnFqYViHzJxbKmW78brHC
      B06lws5QjH2DW3jz8kXeP3NqTe5nLmSEX1EU9u7cyfbBzWSy2UULIOu6zo5tT6yp8MOsAgQC
      AcLhMJFIZMPSYjeSUlq2zckrlzCiEWqFAtboOHt27VrTMTaWehkfH+fmrVu4nsvWLVv4H372
      r4m0tsw7Z+715wq4bHG12GQiPI8UKgNd3Ti2zdZkin1bVuY+XS7OnTvHzMyM/9lxHH7x/juM
      T0w81MlOFUJQrVYpl8vf2LS4lcC2bX7z0QeUI0HMaATh1rtErmdeQltbG329veRyee6OjvL+
      xfOYi9ABGlfz5cJzXYTnYeZLbG/v4teffcLnN6+zKdXG7aEhANLpNJlMZtHfcF2XS5cv+0UN
      7od9+/ahNMz0uq7z6lNP8/vPT/P2p588NA6YLm3Cx77/5UHXdQJeQ70d22X3jh0r+o2JyUlq
      ts2m3l7/u6mpKYZHRjiwf78/k09PT/PB+c9JVyt4CnimgaLraEEDPTifDbscoV/omNLUDLuS
      rTz3wktMTk0Sj0QoxiJ8PDGMNp3hWnqKslI/N65qxBSNHxx9uUnpf/Xm75jQ4Pz1q2zp6sFx
      XZ7av39Ri8IwDFINdVar1SqXb92kEg1z267y6cULvPAQqlXooVAIXdcfSTnEryNGxscZymYw
      ujrIDQ3zg4OHV0zO+u2pTymXK/wvP/kphmFg2zbhcJjWVMoPermuy/D4GNOagpqMozKniNMa
      QXgeCU+wua+P3334AZmggZFKogCaFqCia7gBE82sK1wZoFBianqaWDTql9IJxeMYqkcBOJ2e
      RDVNbr3zNj/73g+WtTq6rstTO3fROTXF9akJv0jzekOZmpoS8Xj8G5kNtFK4rssv3/092WgI
      z3Xhzgj/4S//zYomjus3bnD85Gc8sXUru3Y8STKR4Pfvv8/O7dvpaG/HMAwqlQq/fPstXnvp
      KD8//Sl6NLJu91TLZLGLJUKdHaCAtow8C+F5ONUaIcelryXFlZs3iCWT2ImYf4yiKHiOQ5/l
      8aPvzg/iLYTs7Cb4QSPnK4EuhHhs+y8T2VyWKc/BADzH5cj+AysSfs/z+OT6V1S6O7hYLXLu
      o/f5k8PP8sKzz/L3v/kX/u3P/ox8oUC+UGD74OaHU6JSVYn0djfZ4/eDoqoY4RAOcNu1CA70
      sxBpXXiC0DIpDI7jkMvn+e25M7SEwkQCQboTCbZuGqAlmVw360R/7PNfHoQQhIIhlNnJQpRK
      7HlpZdFI27bJ1KqEY/UZ3YtFqFkWoVAI2/OoVqv85r13SVfK7N6ylWAwyEA0zp1iAWOdVoFA
      4sHpGotBURWcZSiw67r8w+/fIus6aKkkBUWhgGCimOXM6TE2R+LEg0FaEwm2bV7b2ISq6/rX
      Lr3wUaBYLPJ3b76BGptd5lfIuYH65teI3JsRnXKFZCLB7bt3UQ2dsakpOltSRFMtXHeq/PzY
      hzy3azeHOro3XBzkfhBCYGVzhI17pnW+UFjQtldVldZQGC/QvA8VgB6NcEfYXKwUeO/uLT48
      e3pNx6lalvW1e7iPAlPT0zjJOPL9eLpONptd0W+MTk+hB4P+824PhpjOZHjzqy8JJ+Kcu3GN
      G06Vqlq/iBMN89bZ0+RKJYpXb9SL3H6NoKsahQbX6dsff+Tnm2cyGYqlErlcjkwmQzKRQA82
      b5bnWiZuqcLQrdtrmryvy9qbq+2l9U1Bf38/m65f5+TJs/Q+8xSBWJQrd27T3r48XsqNO3f4
      Ij0Fsy9ZeB6bU+1cGb6LFg5hFcsc3bWXd768QEm7l5dRDJrkrQqxUIiv2zSlxKOYRt0Nmi8U
      mMDlzXNn6Y8n+DI9Ba6LVa2BqhL2BF5LHK3BvJm7BzKSccqhIP/4ztv84IWXSMRi8665UqhC
      CMrl8v2PXACPeuVoDPo0dpFcDxi6zpHDh+mIxSiMjAFwIztDaRnPrlQq8caZk3iNM5yicGF8
      mL2Dm3ErFcqmwdsXPkepWWiTMw2HKYTKFeKpFHzNJihV07hZzDE2MVHvtxwOUQzoXK6VUCNh
      1HiMYEcbwbYUXkfrsjxQWsAkFwvz5onj/ju/ev06H585xfsnP+WLK5dXVNVEGR8fF6ZpEo/H
      V5wD8KjqBzX2CS4UCpimiaZpftWA9exwOTk1xe8+O0G6Vq0zJhWVv/rJT5cMJGYyGf7l+MdU
      W5o3nJ7r8krPAJ/duk45HLx3b6UyZsOmV3ge2eu3SGwZQP2aBSyFEFQnp0nF4pRDaxdrcool
      kppO0arhRcIos7IrPI9Q1eLHTz9Ha8t8ushcKLlcTgSDwaaqzBsdnudRqVR8003yW6RLV1XV
      pmpyaw0hBBMTE1SrVfL5PDt37uTC5Us8tXfhEiUA75z4hJte88zk1mr86IldnL99kzF18ZVL
      VVU82f/3a7YKPCp0uPCTo9+673G6rL+z0R+sZVn+PqVcLqMoCrZt+/3EyuUy1WqVtrY2v2Si
      pHavNRRFoaury/88MTHBR9evIjSNw7v3LHhOsVREBJufs50vEI/HGS4V0GKLFyMQQtRZp1+z
      TfCjxP2eVTabrVOAvg4P1XVdisWiXyhLdoiHWd96JuM3+Z6eniYUCnHm3DnOX/qSZw4d4tmG
      fr7rgY6ODl59cjcfnDvL5Zs36O3ooCPRwvYtWzBNE9d1GZqeItDb3WzH6zqTk5OI+yjpo95r
      fR3hIRibGEdVVDK5HKVala19/X5PuV+88zbZSgWlWq2KjVphWQiB67rk83k/T8G2bRRF8Wd+
      yZNPzvLER0ZGOD90m0o4iOe5mOkc+5/Ywc4ndxAJR1a0IuTyed44+SnP7djJ5iXqcwohGB8f
      Z3R6ilPpyfps7TgEqxavHTxMR3s7773/PkPVUhNdoDKT5t8e/Q7//ZOPIRJCuB5aYPWUFGUV
      sYk/ZORv3UGPhAmmWkBRcMsVVNdDV1WqtRo/ffq5deFXrQmk8EsOO9S9KZOTk+TzeZ8u27gR
      t22b87duYLe1YEQjBOJxikGTU+lJ/uuxD/n7D95lOj2z6DXn4vKN6+SDBie/uOB/Z1kWFy9e
      bBpnsVTk1u3b7HpiO0qh3tZV1XVq4SC/OPkJv/ztb3jh+efZ1dOP00AXFp7ADATY097JzkCE
      llwRNVd4ICGWz2Kjm7TrDUVRiPb3Eu5oR9V1VE3DiEXRknFEPIrRkuDtz09v3BWgWCxSrVbR
      dZ1SqYTneZRKJYLBILVaDc/z/LKJqVQKVVWpVCr85uLnhNrbFv/hUplXd+6dN6On02ly+Tyt
      qZRfEGBoZJhbo6M8t69OUR4ZGeH9Ly+yq7uH/bt2c/XWLcrFAmfGRwnGovSYQe7Wyihznqfw
      PPSZLH/1wx/zN2+9Aamk//22QJjBzi7e/PICimmwP57iXG4GYwkOzeOZfm3gue7GUwA588ve
      ANVqlVwuh67rVCoVkskklUqFSqVCapY+LFEsFnnjy/NLKwCglCo8N7iFnVu2+iaR63n883vv
      MGpV2Zps5XvPHfG9YqPj47x5/iylUglXgS6hYocClCIhhOctm0Gpjk/htLWgNTBvw4UyWzs6
      uVDKoagqyVKVdLWCukDGlz/+OdXdHivD6rHhTCDZmUbXdWzbJp1OAxAKhXw7PxQK+V3kG5f8
      aDTKMz392MXS0teIhDg+MsSv3nvHD5poqkpLPI4ej3E1PcXk5CSe5/Hp6dP89otzONEwgc52
      Qm2tZFJxSuEgqqYtS/ihzqD0utqbhB+gJRJl55at1Ar1bo1DIyOIJTxC8hnJ/N7Hwv9g2HAK
      IF2drutSKBQIBoPE4/F5bi25CW7McVUUhcH+TcTd+wuFahrMBA1+f+IT/7tCtUaoXOWnBw7T
      3t7OOyc+4fTMBKKhbqaiqmiGsaqA1FzKsV0qs2/rNkYmJ9CDdcpAqC1F/tZtPOf+KYFfBw/e
      RseGUwC41yJJrgYLzXKyYZ78vwyCjYyNkp8NaFvFEk65suh1VE1jolxnJwohqFhVHEUhGovh
      ui63summiOxaQghBp6rT29XF8atX0Ge9P3pLkpYdT6DqS0flH8/8a4MNF1f3PI98Po9t29Rq
      NUKh0IIz3dyotVSCqWwWLVTfQGoBE2V0Ei8ehVh0nlAJIQjN1tBXFIWntj7BO0M3+acTx/A8
      gRcJsdYFIicufIkRDGCGQrz+rVf45NzneNGIPxN90703DxtKuVwWqqoumLdZrVZ9Xs3DejGy
      TZPsVLNYqqbneRSLxaa+BgDFUok3L13EnPW01HJ5nu/qQzFNLty9TUF4BBLx+upSqvDHh5/h
      /LVrCAS6gKvuwi2H1gpOoYg7Uef9tyST3BD2147f84cEZWZmRkC9+pYsjOV5nm+GaJpGMpl8
      KDwhIQTZbBbbtpmYmLgv1TiXy5GYU4lNCMEH585SiEf8z065wg+272LLwACFQoGL165i6gaD
      vb0c/+IC47iohkElnSGUuj+B6kEhzRfhevc1dR5jfaHL2a5Wq/nVoeGep8FxHIrFIrFY7KGs
      AnJTu9CKJAXHNE0SiQRtbW1Uq9V5WUbFSgVmFUBRFLRggMmpKbYODhKPx3nh0GE8z+Ofj33E
      hK6gKnVPzsMQfjkmAOURCP+j7gC60aDLnmD5fN5/OI2zvfTFr3fBXFmgSxbpXarUSDwe9/33
      gUCAUqnU1Dy7JjwaDSfhukQiYT4/dw5beOze8STh0Gxlh68JA3YtIFd26ViYW3rxm1gSX5UC
      3uhbbqwhqSgKgUBg3U0gGemVirAYlVnXdV/4ZWunRo+IqqqE9eZzVcNgplBgYNMmzowO859+
      /Us+Pfc5Xr6I+zVvwrdSyD7QcK9U4jfZnarquu533/Bt01luvaIohMNhYmuQerYUhBA+4W2x
      fM/GMcn/VyqVedk/mqaxtb0Tp3bvewW4npnhqzu3eWXXHsKxKBcKWaaTkWUHsv4QoKoqmqb5
      /+Rkouv6N3L2hwY3aCgUolKp+EpgGAbhcHjdK0bIGd+2bRzHoVQqzatS1yj8sndtrVYjn8/P
      +636cXMuoiiIWIRzMxP0FwsEQiGqmoqyMcMgwGO+z8OCDnVh13W9Xp9m1iR4GFWiPc8jl8sB
      9Zm7UqkQj8cXFH5d1/3u8dJVuhAURSEVT6CmpxFmcwKKFgoxioDQo+c+zb3HuX97LPwPB/4K
      IDn2D6tIruT527aN53mLbrBlv7JUKuVneeVyuUWjwwCtqRTP1GqcmJnACG/Mcu9L4bHwrz0a
      6TKNeGAbYDXl+yTPRya53G+DHY1GfRt1qfr2UokNw2Aim2mqM7ORXH+LNa5YqKnFYzw43HKF
      Ta5CZWgY5sjOAyvASj0InueRzWbnbV6FEE0eikbINDZgyRVKVrken5zkplVpIp9tpLpHS00Y
      3/TZ/0HekRACz/WoZnM4lWrdzQ0EPUE8HCY80D+vtMwDK4CmaSsatMzpbTxHKpGmafMaLMz1
      TshZfi4URcEwDEqlEiduXV+w5uVGqnqxUG+ub7rww4NNAPGqzcudvfzV80fpdxWE60KpTIdu
      MlksLHjOukmEzNedi0ZXKzSvIJqmzesMMtcsWKyatXSLvn/+c0jGfZff/cbzKLGabi6PsTBE
      ucJLu/awc8cOWlpaUE0DzbJ5/cAhXn3pKHmrtuB566IAjuPw85//fFk1HBtf/kL7gUZqdGPd
      n0alkLP/p6dPMVbI+SUE5yrPNzng84cM17J5qquXvp57PY13bd7CKzt2oaLwDx++T9nU67yw
      ahXXsjELJYKF8vrQoSuVCp5YuO2SDLosNPPJ2j+NkAQ5SX/QNI14PE6hUKiXDQyFMAwDy7J4
      9dvfwfj0BFfu3CW+ecA//zH+cOHaNk+1tHF4z96m7zcPDmJZFr/46AOKIRMvmwPbYVM4RjQR
      5ejLz6Kq6torgGVZmKbJv/rTP11wbyBn8bmmjKIoWJZFcrYZwkJuK0mNVlXV7yIio8emaXL8
      1Elu21WCXR2PZ/uvMTzXrTfPdl0UTUMB0DTcXJ49vf3cGBvFCgfrRYVzefSWjnm/UalW+e0n
      xygEDdxSmZ8efo5gMIimqn7RA1ijhJhGP/4vfvGPvPDC82zatGnBY1VVJRQKNR9QOacAACAA
      SURBVBXkNQzDN3PC4TCapvkzvBACwzDmsUNl4kytVrftFEXhbjaDFgvfd1P+ONC0ceFaFnsS
      KZ7Y3kcgEGB4bIx4LIbruRQLBfbs2k375cv8/tMTRNtb2drSRq7cnAMuhOCjz88yY9YdNAHL
      4fbIMIlYjF3bmxsaPrACeJ7H8Mgo5WqV4ckMwgzR39+/ZGCrMZ0xFAr5Ob8yEFer1XwhjUQi
      RCKRJtPIcRy/NIqEYRh4y/SjP66msDHhOQ5bAhFePHjIf0ctCxS43fnkk/T0dJNMLJyncuXm
      DW5ViqgBE6tY4vUDT3H37l227t0879hVK4AsX/Lhx8ewLJu703kCbX18+7ln7itY4XDY9/lL
      Orb02sxld8q6pZLGC7OMz3AY0zS5ffs2ul7f4EyMjhLfvvW+SvDYPNp4EEKQtBxePfr8fd+f
      pmmkWuY30svn85y/+hWXcmnU2SBo2KtzyF44cmTB330gL5AQgsnxMb64eAEl3kF+ZpITV8f5
      x3c/XbJGu9y8ShaqPDYUCs1THlVVcV3XP6aRBSqz1YQQ3L5zBzO1fs3UHmP9IIQgUKnxg2eO
      oD7A+/vw7BkulfMoDQwAKxzi4y8uLDrprVoBpKDt2rWLaDRCtZinf8+zBNr6iIdDy2q7Kpmg
      pVLdhgsGg02+e7kyqKrqJ8i4rkupVKIw22/K8zwikQiDAwME1mFif6xQ6w+zWOZPj7xIck56
      60owk8kwblX9PgESqq7RHostGgR9oBVA13U2b96MEFDKTOG5DmNXz7Nva8/9T6ZuipTL5abo
      sNzsyoivVILG1M1cLkc2m2ViYoJMJuPHBrqjsTXvo7XW+4THfJ9meNUar+zeRyy6dDGw++Hj
      C+fwwvOzCD3X5cr42KJdkB5oE6woCrFYjHA4xK1LVyjtfApVVbh4c5T2ttb75hI0enkURaFS
      qTA9PU08HvcT8edqrud5JBKJplpA2WwWRVHY3NWNGB5mxq5Ri4bQV9jB/X7jnCu4S5Hy5v59
      IQLcUljPDfpG8YJ5lSrP9Q3Q39f3wL81VSygJOfTX+I1m6NHXlyU3v9ACuC6LkN3h+no6SfZ
      0ooVjhJOtFIUghu3h3jyia33PR9mW2paFpZl0draSigUWpBj5Hkel65cwXVd+nt7CQQCaJpG
      KBTCsiw6Ozv9ShJvnv4MexUKsJT3arWQAldLZ2hFo6oIaqaxZAf49fJU3e8+ZMed9YZbqfKt
      wa2Yaj0PJLzMhtqLoWzVmCfiQtARjfsRYiEEJ8+c5tCBg758rdoEEkLw1bVrfHx1kqzRhqqq
      RMujpO9cQTNMbo5n7tusLJvN8qv//nd8duwjarUawWCQmZkZ8rmc/6Jklpjnefz8l//I8Ts3
      OV/Jc+HqV/44yuWyX9ZFmkwB9dHU2mkSMCGwcwW0dJaemsPLm5/g1eeO8PqzzxO153OT6mzG
      pblQ866xQtyPe/SwzLOU43Hn9m1OnDntx3IeBI39iGG211qhSKF6L8tRURS2Dm5meHiY4eFh
      YJUrgCyVoqAQc3JYrs7+fXtmv7+K57lUY70cP3eFbz29d9GIcFtbG709XbRrNd769S/o6+9j
      ZvgOItbGaz9+nWq1SqVSL21oWRYHdu+hL5PB9Vxi4QiZTKapYkXji907uJmPb11Hb5m/sVos
      G2vurLtSYVAUBSubQ9QsWgJB2sMRuvoH6e7qmvdbLUaA7NUbKIk4WiqJVyoTKVYoxMMEGzaD
      SxEK5157JavFQscvRkdfD2QjQaanZmhTVC5fu8ZIMc+39h+kLZXiX373Bt/7zitLVgaZi0Qo
      TGPX5mClxh8/f5TobAqtRFtbG21tbf59rnqatCyL1lQLL6Ra/IZ0d4aGCJkmdj14zfU7wxw9
      tHsepdl1XS6cO8fUnesEPYuapbF/UzuaatM52MudiRnGRkcJzrpFFaXeGaa1tZXW1lbgXjpl
      1xzhkjNce2sruzMZLuYzmPF7Sf0LzaaNL321AiB/15vJ8Mcvf7vJ5lxo7/DswYMc2ruXy9eu
      MpHLsn/bdlpTKT778gtGbdtP1l8ve33u784NUC4HnudRuTtCIJ0h4HlUtm7GiMfmFQFe8Pqq
      ipKIk8nkGL7+FdFNfbx5+iSHBzYzMjFBLpdbkQIkQ2Gyop7OK4QgqZtLepX8/JJlX6EBuq4T
      CAT8pUt6cN755HNanngKY/Zhhts38faxkzy9dwdts9wdy7LI5/MUi0UGW8IoSmReEnvA0HFn
      +UKLeU2kZ2ghAVEUhbHxcc6PDRPobG/6fqmHIf+/WoETnocZCHB7aIidO3bMW0nmKpqmaex5
      cieNbfWe27OXd86copS450BYzuZ7pWOeK+iN3TaXA+F5hI9/xquTM5izAj92Z5jboSDT33oR
      PXR/4dWDAejuQE5POUVw5uJFvL5u7o6O0tnZuez7SYQjiEIa4XmkKhb7du5e1nmr2gM4jnOv
      rv5sl0khBJsGBzFD95accEs7lcQgX92q21tCiHvdXjJTKMrCvZ87kjHGR4eXdBmWSqU6/aGh
      RWpjrkEiHseuVDFzRUQ2t+jvLITluirnHuNUq2zv6eXJ7dvnCftKBHTfwGasQnHNcgWE5+FU
      F7ezZbBxpdfKGDp6wzPoVlSertTQr99c1TiNUJBcpVxvFDLbC2K56G1vx61ZCCF4ZuduNg8M
      LOu8VSmA53lomkYsFiOVShEIBPjszDnShQrF6TFq5Xr2jaIoZG+cZ/+TW/0IbrFY5OqVy7To
      7pIzsl1dvKw51CvCzczMUCgUKBQKZLNZpqenyWazFAoFLMviT49+ix8+8xxbwg8WH3BqNWrD
      Yzjjk1SzuXmmg4SdKxANhRfN9lpuAkx7ayttYr5pthqFEEKgZnLsjyaJFcrUMll/oy0dBqvx
      +ggh6CtVmPsGdUWha2R8VYrr1iz6u7tBqbM5V4JkIgE1i05FX5FbdVUKYJomqVTK5/EAvPDs
      YZIBsIoZzGCEUnaaWqmA4zpcOf8FVy5+yejoKLZtU8znaImEF32hM/kiMxMT87LDGqFpGolE
      gkQi4ccN2traiMVi6LpOJBLxaa/9Pb2E0rl5HpbloJbPM4DOT188yh8/9wLf3fwExnSGSjqD
      nS+gTKXxxiZxqjUCbSmO3bq+4pc3F4qisG9wC5U7d6ndHcGuVLGnZvAWSTDyPWY1a56iu5bN
      3u4+nti8mVeeOsyPdu3Dm8kAi2fXLXUNCWdomP3Z/IKTWF+xRGV6+c0IJVoUjVdffAlRrjI8
      M7Xs84QQ2LZNrxHgx0deWFGRrzWjQ3925jzpqmBzKkjQHiOc0GhrT5Lc9x0++79+TrXm4u7t
      Y9tTe4klW6iWpggFmgNlxUqVjA1tg7t5rq2NbDaL67okEol5GyJZ0m/uC5A1jmQATVEU2lpb
      efbJXXx45UssIVCjEbRgYEkzxy6WwPUYVA0O7drtH9va2spzO3aSzeUIhEL0dnbWXcLXr+O4
      Li1btxNagwBcqqWFn7xwFM/zSGcy9Ozcy1unPsNKJeZ3mqlUSNQctnd2M5nNMFbI4rXVW4Pq
      psF0scCW2WPD4TDb2zq4PDODpqmEPKjhQTy2cJl2Iajl8pixmF/JWghBz9UbBBbZ7LZpGsmR
      MeyO9hWtBC2hEMVSCcU08Jaxh5AoFou89d67vP6D15ZFwWnEAzfJE6LepzeTzdHX24OqaUyO
      jyM8QTQW5cvffUR4KEdQ0Sg4NUYTENzSRYuToyXWHAjKlcroPdvpbghcyCbZQgjf16+qqt8b
      eCl7faFAmuM43Lp7l7vZNDPCbfIQNSKRK9KdaiUejtC9gs3YekEIQalc5p3Pz1BWIJhKAgq1
      dIbnB7awqbfXv99sLsfNkWEsz6ViWewb3ELrrBNCCmSxWERRVSLhMK7rcvHKFa5Vi3UvjqIg
      PA/XsulwBQe3befG3SEmhofJKoLk2AT7xiZpXcQBIYTg81CAWwf3EWxLzePnLIY+NI7s2sN/
      ++w4sUCQv/rWK/fdi7muy8jICMmWFuKrKOG5pl0iZUT36pWvGH37MwzTpKfWXJ1NCEHaLjNt
      VjDbgmwZ7PRnayEE40WLnp0H/PRHTdPIZrOYpkm1WvWXN9d1aWtre6ByJ796/11ET+eCXpZN
      tuCpXcvzJDwsGIZBqVxmZnqaY+++w8Du3ezYsrWpR8JqvFjSFBoaGWY8m6FQq9EWidKRSNLT
      3e1vkq/9l/9Kz+QUgYZJZ7E4igdkXJeb4SB3nz1EqHU+fXnuGHYFo2zp7uFX506zKRDm4JM7
      72vPF4tFxsbGeOKJJ1Z0zxJrFi7N5/N8+nf/TLzkkWhvpZswAUtl7i5JURRSRpiUCHOj1Oyd
      URQFxbWplkvEEkls22Z6epquri5f+GOxGIVCAdM0KZfLBAIBbNsmk8kQiUQIBoPLKusohIBZ
      st1ceLaN624swpphGPWCYpkM1jvv8oOxCcY8sHv7mtzFq3XjKorCQF8/g/2b/M+NGL52jc7J
      KXRFoSwEkSWuoygKqhC0ahqpqoVy7DMm/+gHCNvBGh5BT2fRDx9oOketWWzd1g9CELQcfvza
      K/eNEFuWheu6bNu2bcX3K7FmChCNRuk7so+hT8+jjE6S0AK4nrsoDTXn1shoLlenS4RVFwVw
      FY2Sp7GtvZ7jKeMLxWIRRVHq5S5UFdM0/Q1yLpcjEomQSCQIBALk8/n7lnOfmJrkwy8uQjLO
      QnQ9zTQZyuYpnjnF0YOH0DZAPSHbtjFNk2I+T+vYOKaiMDA+Qfpv/yuXdu9k12uvAaxKCZbj
      9o0mEmS/+wpOpUyos4vy796krWGzv5QZutX1qJ04RThfYHelytl4lHQDudCtWbzUP0hPVxcT
      k5OYan2VX2oiky51aQavFmumAKqqsuvAPrY8uZ0P/+FfiI/W4wSO4/gzlNy0egrYB/p49dA+
      PM/j1q1bTI1O4JZs9h454Pv2M5kMyWTSfxDyxTqO4y/7jX+TLZOy2Sytra3zIpuSbl2rWVQr
      ZaI9i9v2ejJOulbj8ldfsW/3bsLhsO9tuB/HaTWQWW1SsRvdk45tc/b//TtaOjupZbPIFHBF
      UWgFuPwV6UOHaO3sXLLO6oOgtbub1u5uPM9jcmyMmWefJv7BR5jLUJ4WReHFybpXqCpg5Ikt
      hBvOSXqwc2t9Fq/VaqQ9h6vXr/Pk9u0L/p4Qghs3b9LXsO9ZLdacMRYMBnnmh6/wyV//gq1e
      1OeXNA50qJpFq9W4eukrJscmyI9m6FSShFSds788TnxvB9u21226YrHolz2RjTxaWlqaln05
      26mqSjqd9ptqy1miWCzS0tLiK8vQ2CjhTYvnLUuomk7ZskgkEj61W7JWF8JqGJyKUqeUW5aF
      bdv+vqfRBXzn2jV2T01jSNfinHEnXJfJmRlaGzbr60GhuHnhAoWPj9FXKtEiWJbwy7FI3FUg
      0NXlf7YrFY5s3+WXyskXCuxJtTN0d2hBBZiansZzXbZtXZppvFysC2WypTWFsakD93YJXZlv
      PvQHk1w8e41wsgdDePTpdbqCjUNqSweKaVCpVIhGo365Q8uyaGtrayqLPncDJtMkOzs7/c1y
      KBTyC3R5nsf1mzeZVASqsfStu5ZFcCrD89991Y90ywy2RkGv1WrUajUMwyAajc7zq99PEDVN
      w3GcppKQjTTxXDZL7uYt+pcQtIIQRFpaFuypvBBParmQk0x6cpLM0F3M45+w07JAUYmtYOIV
      QmAhcATcGOxDM+uTiXA9diVbGZjdd1iWhaHA0/v3E53j0Umn06SzGTzHXfWGdyGsG2c4gIbt
      uWjq/CelAJ6iENDu+WwVRcF2HZ595VlisRjlcpmhoSHf9JAZPaZpkk6nicfj/qwsV4K2tjYU
      pbm1amP3EyEEo5MTuJqKxuIN44QQBEoV/uqnf+oLlW3b8xL2M5kMoVCIRCKB67qk0+kFu1Yu
      pQSyK+dCOPPLX9F1+zZdrgsLTCQSCUVh5Od/TzoUwovH6fjOt+no6Wm6rrzPRnt/7gTS+Hn4
      2nUKx48jNg8SOnee7kq1ifawEtSE4J2BXuz2NrTWFPrstTuEwstPHb5HTNN1bl75kuvnT/H9
      f/WXQH3SGhsf59KVKxx55hmiD5g5NhfrpgBqsUpwCU5+qx5krDzJtmd2MXNzgmBZQ0NlYnSc
      1r2tqKpKJBLBMAy/Y4xlWX5FienpabpnXXTVatWfhXt7e5sq0qmqSjwe9zfF33r+BZ6cnOCD
      S1+QN+qKsZASmJpOuVIhFo36M7/clEtBMU2TSCTiXyeVSjEzM0MikWhy7d5v1l1MAZK9PbTf
      uImyhPADqIpCv+2AXYB8gfTf/Tcu7NnN/h/+cJ6XrRFLmS/VmWn6xyfQJyblwUuOoRFz79cE
      qrEo4U33XJrBcpXvv/hyk7NCVVWCoRBTNz7nrX/4L6Q2PUG+VGFwYIDvfvvb67K3WbV7Qzaq
      zmQy5HI5isUipVKJSqVCNpulMl1nZ/thejxyPRGmExo5r0Z4sJMf/vufcuSVF3n6j16kZFcI
      qCY3f/8Fl89/iaZp9PX1Ydu236myVqv5drJpmhSLRb9ZRiwWIxgMLkifaHzIiqLQ3dnFT468
      SI/lEcwWqMyksSvNiRMZ4VKZXXUak/IXMzFc18XzPJLJJPl8nmw26/OTlqIbyLzoRiKfRLCz
      i4UzWZdGyvVIXbjIzOTkis6T91KrVrFGx1g5cWQ+5P3Yufw9gl+pzLd2752XBfbV5Uukh2+i
      Kgrlketc+eh3mIZBR0fHugg/PEAgTCanL/ZyR+8Ok/9qCKtWw5gqUdY8XvuP/64uXOk00dkc
      goufnaEiHMa+uks4q6EqKk6Lyqt/8SNUre4JuXbtGrquMzU1RWdnJ7Zto6qq37xPPpxkMrlg
      f+HFIG340bExJmem+XLkLmgaVjiIoqoc7R1k16y9KYN8uVwOx3EwDINisUgikWBychLDMIjN
      Vh9onPVlznJLS0uT6ZFOp9F1nWq1SiKR8IuBSfOtWq0y9MkJtn/x5apKhQghGE4m8Do7EeEw
      aksSp1zGiEYZ3LePQANdw3Vd0lNTlItFPNuhfOoUA8MjK77uQivdLV3jeiRM+1MHCcdiVBV4
      Ztce2mfzOiQmxsf43c//Fl046HaFcEcfO545ypZt29e1T92qTSBFUchkMj6vXRaqkjNh38Am
      GNiEEIJisYiu6b79mZq9eSEE42cvs/17z7Nn717OvP8ZlRtZ1LTHB//4Nom+Vg49/zQ7duwg
      n89jGAYzMzPEYjFf8RSl3jCvXC77eQoSUsDlGGXyfeM9BAIB4rEYoWCQzf2bcF2X906dJBc0
      +PjqZbb09/sNOqQSeJ7nB2nS6TTBYBDTNMlkMn7Cjrw+3OuJoOs6rusyOTnpN/uWSiOvIY8Z
      v3OH0K1bq66ToygK/bk85JobCXpCcOezkzg7tkNbG0HDoHTiU1JT04QBDehU1RWZPHNRFB4G
      Cl+1t7Hp+9/jTwYHF6zw1oiZmRnKlsu//h//VyZGhzGDQbZtf3LVY1guVq0AhmGQSqWoVquU
      y2VKpRKZTJ1lGAgEqFartLS0EAwG6erqamKOShSLRehrRTUMItEIL/zwZc4eO8XoF3cIjymM
      T93hvK6z6+Ae4vE4tVoN0zR9wZb1QyuVCi2zXhDppVEUhUKh4Df9U5R6CfVQKOT/hqIolMtl
      0uk0rlsP2mWzWfZt3kK+XKZYrTStcIFAgN7eXlzXZWysXmrDNE1fIXVd92kb0uUqRL28oxyr
      67p+MtHU1JRf5Bfq/v6bly5RPnOW/tExAvWBr/YVLQhVUegrlhCnz2IDHtClKKtqGC6ALIIE
      oMxO/pYQTD/zDEpLksGODnoGBu4r/AD9mwbQIkkuXbrES0ePrrkLdzE8UGlE6Z0JBoN+VWhV
      Vf1itqqqNvnQ56JYKFC+lmU8PsqmgU1omsbTLz/H6LZNnH77BMGcxp3Pr3Pryg2+/7Mf+WVS
      YrEYHR0dmKZJMBj0awsZhoFt25TLZfL5vN/mVUZRZStWCTmrJ5NJHMehXC7TORtM6u7uBvDb
      tsoaRcViEdd1CYVC89IepUmWz+eJRCL+M5JV8LLZLNVqFc/zCAaD/opSLhQYOnYMDIPNl7+i
      h/VPTlcUhZXxJpvhCcF4a4rev/wLxv/Tf6ajXCZjGhSef57NB/b7Efvlem1y2Qyhwgi5kQie
      9+JD6+azagWQ3R0ty2oKMkmhEqJe6Vl6ZBzHmdcvIBqL4akCVW++2Z7eHl752Q94/xdv0bGp
      l76tmxBePQIsPTqGYfhmQzAYJJvN+gVzZaKHdF1KzpBlWQQCAZLJpD8WuVrIYFs+n0eIem8D
      y7JIpVJN/PJQKOTHIhrdqI1BOSnsjS1fq9Wq3xRQNglsa2ujUqkw9f/9nN0yuLbOgv+gkDPz
      xLat7PyLP+fSu++iWTUmDh2k9cABejs6sCzLL3q8XEG2bQdNgZmha5TL5TV3dy6GVSuAfJmL
      bTobyVmweHO75PZOtuycT2YKBAO0D3YxOTTBke+8AEA4Eiafz/u1QU3T9O16WWJdXjMUCvnm
      hjRRXNf1VwOppI0CLN2aU1NT1Go1HMchHG4uty49UDIqLfcXUunkvRqGQSaTIRgM+h4kRVHo
      aaB6W5aFbVl4tRouoG1w4QeYDoXwXjjCzueOEI3HSXseO/7n/4m+gQFM0ySbzfo0Dtm3YTlI
      T45jqGDGO1aUDP+gWLUCSNND2tgSja7E+7EyY7EY3/nRd/3PlmVx6sNPCQQDDA8NY1s23/2j
      7zWdI4tgSd+8VKzGBBio71EaN71z0wsbhdrnKM2aJrK3gSzDPveFyP2FHEckEiEQmJ9gk0wm
      KZfLzMzM0NLSQmXW1Spdxj09PfVV8j/8Oyb++m/pWUZLqUcNs1ajUihgOTZTk5O88vrrvpDL
      Z1ytVv2SNd3d3Uuac0IILl64wPVzn2J5Cgee+/ZD61UNDxgIk93boZkHI4NPc1PTFhJC6TUy
      DKPuTYqGuXP6OgCv//ufNAmfnOkVpd48W9YDktXhZA2hxms1mmSN30uOu6RZSJNJuizl/Ukl
      kME4Ieotm2Rlaqi3hEqn04TDYX9FlBx76YXKZDLYts34+DjxeNxX5FwuRy6bpaBA9yKR6Y2E
      hBAETp7ioq6T+PwctyIRnCee4Pmf/gmKopBMJjEMg0Kh4JvIC1kJ5XKZkZERctkMQ1+eRS3O
      4AnYvGXLAlddP6xJRpgUIhmllYQuyW50HAfbtps8MrLkuW3bRKNREomE/xu1ao1L579k3+H9
      C+Z3yv3HXJen4zhUKhVs2yaRSFAul6lWqwQCAYLBIPl8nunpaZ/bI9MnLcvyeTyNmWaNkMfK
      +5EFeRuVq1gs+m2e4N4GWiqPbdu+QyCfz5PP5Rh59z2SE5MonosnBJt1Y82UQCrhXHN0qeNh
      eRtwTwgmNQ3ju9+hZ/9+2jvutSkqFAqUSiU/QCnteek0iUQi3LhxgxPv/g57ZpiQOpvwH+/g
      z/+3//hQJ4EHXmukqSOEIBAI+IJh27bvn298CY2wLMtP9LBt248MBoIBDj771KLXlALsOI6v
      INKH3hgci8ViRGYrg6mqiuM4pFIp35skYxmSOSo3sFNTU3R0NPedkgos76NRMaXghMNhX+kq
      lQqBQKDJA9b4f3mtiGHQoygEdIOy53HRqhFSVGoI4qrKJn31QSAZe6jVar5dLu97KTNjMY5U
      IwoBk/jP/hVP7N8/79i5DgaJyYkJ7ty6QSmfJZfL483cJaTWV+Oi5RHU1i/gtRjWxNiq1Wo+
      V8a2barVatPmZ27wSdrbjVhpaQ4/bD/7cuUsOxdyLNJzJP39CxHFVFX1N7BzIQVooRWpsaSg
      vIaslrcY2c5xnHqCzw9fY/iv/4atrkdYVdlp1lc1FbhsP1jegaRVy/uRq/LcMc39bjkzcG3f
      Pnbu27fgsZZloeu673oWQjAyfJcTv/l7avkZSg4EVLA8DVvVwIiQHBjk2ecW7uKynnhgBXBd
      17e9ZXR0IduvcRmWM7JlWb6grKY6sOwpthgURfHJakIICoWCH5CTFIVGD400UyQDVX4vz5cm
      jvRABQKBJvan4zh+oG0xk0MI4ZthmqYxc/s2mxzXd38aioInBOcsiz0rrHCw0P0vViJkbqBp
      7v6s8TcWQvT0Gb5IJtj3/e/P/1tDF8aLFy9i1aqc/PAdpjNZdAStbe1YlRwDew7y/He+TyAQ
      IJvNzlt1HwYeKBBWLpfrPYEbSurJmVbydaCZirsQZLFdSam433UlVjJbyHiAzCkulUp0dHTM
      81OHQiEmJiZoa2ubdx3p0qxUKpimOU+4GpV7IUjahux1LIQg0dNDWlFoFwJl9hgBaIgF0zU3
      CsJA+uRpvFdfnXe/coUtFAqcOnkSe+IGmhGko7WVbdu3s3n7TlTdoL9/E/rs6hSdZd0+7BVg
      1eE22dqoUfgVRfG9JqVSad6sPxexWMxnc6bTaTKZDOl02o+YzoXneRQKBTKZzDzFux9kO6VM
      JlMPelWr5OeQ+aRZJBNv5L5A/pOR55aWFj8BX54nFV+aSY37DHmMfG6ywYeiKLR3dWH8+b/m
      evgedWLIdVgvIsBKkmLuJ4zhbJYvPvxwUYZsPp/nyPPPk6u6JKIRXv+zv+SlV3/I1u1PsnnL
      Vl/4gQXdyA8Dq14BGim8cM9GzmaztLe3N0VBF4PkxBQKBZ+nIwteSXJbY6MM6U1SFMWnR5fL
      Zdrb233vkxRiuQJpmkapVPLzhEfv3KF48jM6PQ9XeNyJxGg5eND33EihTSQSlEolYrHYPEWQ
      45m7uVdV1Y8bSLtbemJyuZzvBWo8R1EUHMuivVT2zaB2VaO8ATpZNt7rQh6iGoITv32DgYMH
      SSxQy7O7u7teoS+RpGPLTnqXKHGykmpua4kHigTLB9S45MnWRstFMBhkcnKS3t5eoJm7n8/n
      /WOkcjS+AEmKKxaL/rmS0iCTV6RPWm7KOnt7KV67Skekbmp14zFy4hPGGSgJhAAAHflJREFU
      d+6ia3CwaXMsN8xSKeVq0TjGRsGQ7VslXVp+n8/niUajaJo2b9USQlC6dIk+5R6VIqIodGka
      ly2LLl0nqKpNSeSrxWIz9XL/PveYiKKwf9s2CoXCggogeVu7Dz/Pvn37HmTo64ZVKYAULrhH
      iZAlKqQmy1lP+s+lgMxthiczv5ZaLarV6oIm0Vw00pQbryeVLBwKMXHmNFvn5AP3BgOkv7rM
      3UKBvj17UJR6hQmZ7igDWXI2l+NeCOl0mlQqRa1W82MGUpEalUX+u3XmDG2Xv8JoWBGEEKRU
      jWo8TOX736OYyxP45ATtlrUserQnBAKwhSDYkJk2F3ICW8okWupvqoDC0BC3bt2ir79/wWPy
      +TwHDhyYlyq6UbBiBZDeEKDJqyJr9kgUi0UKhQKapmFZlu+RCIfDFAoF+vv70TStqY7nWkK+
      2HA4XK8M8dUVol/a7AsGURfwrqRMk9D4KDfvDmGpKjVNZ8uLL/pepmAw6CthY4BJfpbXTCaT
      vpJrmtbERZrrep0eHUU5/glzC/rJ4wptbTy5eXOdZj04wK33P6Dr9h3CqoJC80oox5JxXUac
      WWKZ53EkEFxyo7da4Yf6CqBrGgefWjhm43kepmnO41NtJCwZCW60ceXmVqYlSnrAYmQnKQSy
      tqd0jUlXY6PfPpvNrrgevEQjdWGhFyYF+MIbv+VpTV12kSshBLdyeWKvfo/uTf9/e1fW3Mh1
      Xk83djTY2LiAM5ydo2UkeUaSpYoU2aqUklhObLniVCVVsSvJQ6I4fkj+gB/yQ+xK5S3LQ/Lg
      5CG2Yztlpyply+uMRpGlEa1ZSBDEjkZj7zyA5/J2o7sBEOAQnOGpmqJIAd1A3+1bzne+YaFM
      rVYTdGrngPI5yRsEk3I0n7jQt+/cQbvXQ+e738P5ShVeaFsW7q4sQ3v1FWxsbsKyLHz481+g
      8+4tRItl1JtNRJI6epcuQrl7D2qxiLCi4Lw69IXu93q4v3EGq/UGLhqHKa70R9kaoPr663jt
      859zneCmaeKXv/wFXnjhxYn5PfSzHhYdeiwVgruLYRi2XqumaaLVaonM6iyYdQHU63Ux2RiC
      5WcLh8PQdR2DwQBb//avuByY7rO+2zBw9jNvIpvL2WgfzKaSFuGcAPl8XnQ4YfMJVVVR3NuD
      +ff/AL3fRwjjIy2WZcEEcFeLwwqHkf3M72JlbQ1QFNz8+jeA65/A2cuX0TAMNL/573iiM6Sb
      1BVgb3MT4WefQbvRQO4/vz0XP4LoWBbuP3MNr/35n7mOv2ma2NnZwYULFyaeH3yO8+gaOSnG
      LktFUUTyp9/vCxub/JlKpYJ4PH5oCuthOpM4QcdXjh7JaLfb0DQNsRvPo/7Td7A0BdvwWkLD
      7R//CJnf/5xIrHFwyEZ1kvAKhQJ0fbRnLQBoiQTuZzPI7hYmMgsURUEcwJNNE5bRRP0f/xlb
      CQ2daBSVYADhn/0M3R8MzagcTTIAey++gM39yqp7dw7XscUPH4SCeOkLb9nUL+Ts/K2bN3F2
      Y0P4PqRl+IGvfZgRobFLkwkv7n7xeBzxeFwUoGcyGTSbTezu7h6q08g8jrpcLodMJoN0Oo2V
      lRVkMhnkcjlhntEhXb98GQ/06Z2xpUYDhcKwYQOda8uysLu7i2g0Cl3X9xuGx4UfkEqlRPRq
      aWlJTI5IJILka7+Jqote0jgoigJdUXDRaOKJYgmZThcX33oLhWgEewpQ3n9dWVGQeWpYT9tp
      t2H+4IejPXRnQMey0Dy3gVQ6LaKBMts2Eongky+9JKrqgMmoLvSt5qVWPgnGzj5ZuImOHf/J
      TqCu66IqaxowIlQul2fqF8uCeEadnGg2m0N16SeeQGlKbc/1gIr3v/0tQezr9Xoim8x7s0It
      nU5jbW1NnBSxWExQJnq9Hv7vnXdglkrIO/hGzknkRlUYoXVns1hfX8fzf/s3OPdXb6OUTqFl
      WaimU0juF+ff/eADxAt7c5E4AYCqNcDW8zfwubffRr/fF8oghUIBW1tb2M3nXd83qQ/Qm7Im
      Ytam3r4LgNo/AAR92Q3BYFAMvlxWOCni8Th0XUepVEKtVhPhw0qlMlJwMy24m7B45dzlK+i9
      +hoKPk3jnAioKl4KBfH+f30H5XIZtVoN5XJZZIxJ/QXclZaZj9j61a+Q/NZ3cPZ7/42r7dFn
      yZplqkiQSOb2LBVFQfb+AxiGAVVV8cG3v4OuYeDDTBqpNz8jzIjVjQ0MvvgH2HPJLQ8sC3uq
      iv6EY1VWgPKrr+DTf/xHQhaGycrl5WVcuHABa5Lup/xZJz3pp+7wMqNfE/ja1772d16rs9Vq
      iQkoKy67vY71uUxp12o1wcL0g8wpymazCIfDqFarqFQqomaWvHq3a5Hv7wYmpWSGajAYhJ5K
      4d79e8hOsbhURUGi1cLHv3ofe7/eQqVaxer584LZyaIerwFRFAVnzp3Dzwq7uF/cw5mBhY50
      bfl1/Em72u2aiqIgZFkonz+H9PIytLNnUB8MENGTOPfcs4L5GYlGsZRMYmt3FyvlMgwAHy0l
      sJfNonT2DJKffRO3m02sFUuu9/m5AjTWc+g99ywSn3oNz7/xhlhcJP+R+jHrZPT6ruPeMws8
      z6VutyvsXmC6oykcDiOdTotEGBmZTvR6PaHeIL8mk8mIwnNZaYEFFvJCaLfbImMsQ1VVcZoA
      Q0d5d3cXmUxmeM1DiC3FQ0E8s59Eu1vIo16vC2fXr6Gf/JmuPPkk8IubUBQFP1UVPNsfIIGD
      egYnvQRwF9jdTadxKx7Fs6EQdF1HJpNBpVpFdH8R0k9h+HX15Zdws1BA2zRx4a3PI5lMihxO
      6PVP416vh0G3i0G5jKzRhJFJo53L4cKLL+BZF84/gIdWuH6U8AyD1mo1obIAHNj/bg+iWq16
      cn9oQjmzvYZhCN682/vIEJXDo4PBALXasDMhF8K0IVTKmdz78ENEf/S/SB1Sdexmq41zb35W
      TLZEIjGRnWtZFu78+B1U3n8f2Zdfwt7Xv4HcYLrG110Ayl/+BS7uS8hzgRSLRXFis3pN9Bjo
      9ZDP5xFUFGSWl1Hfl3dZW1sTqnbBYBDv37yFd7/3Xbz11a96jvejBE/7RNd1IU8u0xnc4JdO
      ZwJsZ2dH7Ejcsf0Ic26TSVWHDZQ1TUOtVsPOzs7UITOeZBtXrqDzG6+gMMXJZlkWap0ObjVN
      BDY3xWefdPIDw2d15aVP4sUv/QmSy8sITenEVWJR1D/1Gs5vXhkh1WWzWUHdYHi53++jWCzC
      MIyhJEw2i9B+m1sm6HRdF6p+jQ8+QKhaQ71SeeQnPzAmDzDpAyDJy8veZ3hwd3cXkUhEyCj6
      wY8bHgwGkUqlUK1WhYk0KbgrqqqKMxcv4favf42VPe+etB/X66gHg+iHwjDDYSSfeMrWmWRc
      OyY/aJqGuqoi63ICuG0qZS2Os3/9FWRdHE2+h0xUhidN07RJyVerVdFXLRKJ2OLzd27egv7D
      /0H34gUkM/5N7YDpaogXFb4LQLZJ/b7kJBxzNqqIx+MT7dokkM0bbKuZy+UQCoVw7sVP4u5/
      fBOrAAYDCwNYiAWDUAD8UlGx/Ftv4Mx+sT93UZo90Wh0Jh57OByGsrwMK7/r/3xhYS+Vwtkv
      f8lz8hNkYFYqQ3Vu57gwm89n22g0ROb18jPX8NGffhk3rl6d6Nm3Wi1hph6lgO1RwncBtNtt
      mKZpY286IVMCZDPASfwCYCOEjZs0rCudN8rlsrCP6aC/k1nGh3c+RPYT16EGg+g2mxhUKli/
      cQOa5OhpmoZGowFd1z1rh6dF9NwGkPeWMbcA5NdyePorb490TfECF6iqqshms8jn84KyQpsf
      OGg/9fHHH+PSpUsIh8N44vp1AMPJzVpr18+1b14xXPtILoBisSiiG4ZhIL2f+XMWVwcCAdG6
      1C90Ry48eTFei4ChSz8KLeVPxsHtdIrH46JmWVEUvPr667h35YqNsOeGaDSKTCYz1yN/afMq
      ej/+iWv5Y1VVUX36KTz1e5+dePIDB8lF1jbL4r+yYgNlHjVNw507d3Dp0iVBael1u2h3Oja1
      axmWZYlN6mFmbucNzwXQ6/Vs/B7DMLC9vS0mjfOfXEg+GAxgGAZarZatAkpWTCZb1O2ordVq
      NkVhZ4aUuYNMJuN7mshFLMCBQoS8eFiUn81mbeaBfM1IJGITyJ0nLt+4jp98//tY394ZuXb3
      1Vfwylufn9oUlCUj6fMwoiPfg1R01k2wMF1VVWiJBNyD10Nw7I6Kzv6w4LkA+FCobxOPx9Fu
      t0XI0WuHZ4VWKpVCOBwWpDngQETLsoaKybwHQao0r8W/OdPdjUYD0WjUJoTL67v9lK9fqVSE
      cnOhUEC5XMbGxoZtwgAQXH5OpqNCMBiE/ulPofdP/zJyCgzarakml2VZsAYDqFL4kj5Bq9XC
      0tKSIDQ2m03BvJTrHGTZGD+QGMgkJhOVJ20x+JpAhUJBxJfX19cRjUZRr9dtFfzygyoUCohE
      IqJZHTCMOqiqilgshlqtJpIvcvKKOxRNI54cFNxyotVqCUYmB80P/CymaWJ5ednmhA8GA9y9
      exe5XE7IrNBRdxvMo4h8bDz1FN4LhbC2X+8s0DS93+SCcrmM7fv38cxzz4m/MTy6tbWF9fV1
      UR/NVrNyohHAVPa8ZVnCF2q1WmK8TlJUyHcBUDe/Xq+jVCohEonAMAzR1nN1dVUcrfV6fVgA
      7cgOrqysoFQqicJ3OlVsGeS2W7OEccOjiDoej9sWgRfYuGN1dRX1el2ELLlwufAYzZClUGQc
      dZGGlkgAVzeBd28fPA8A0aen65CS3952/Yz8G7WMqNtEHg/LPaehIvO1zDgztMrT/aTAc0RV
      VcXGxgYSiQTi8Tiy2Sx0Xcf6+jqSySRWVlZQqVRgWZYgcWmaJshw1WoV+Xwe29vbYhfy2xlk
      ZqlhGDb/gwk0/pSTaX7o9/sIBAKCCyQL18oLr9froVgsClOL34kShzLL9TB8lXFQFAWbX/gC
      ClJSqw0LiSmFomJxDVeffNL1/8m+WzabFbs1xzCdTouGIpOAuZRAIIBGoyHG5qTB9wRQVRUr
      KyuIx4e6/KQhUJV5MBigVCqJL95oNFCr1bC2tiYUGqiIABxEgQgv84a+gGEYtt2EiR1gmEVm
      nwDKDPK/qTnKI/7Bgwc4c+aM5y63urqKYrGISqXiWeV11JLdyUwavYsXgI+2YFkWymtruDQl
      1yadSbt+zk6nY+u0yIw6x1OmQngtbqrhAQcbCE9wKl1T7e4kmUETVYRpmiZUEqjATCeWPXG5
      ayYSCRFB4hHLiUoRWuf1ZbDfL+US+XoKW5F3Q7o0B69Wq4n/r+u6TRNTlkd0y0NY1rB4fm9v
      T/QmdvJgjrpKSVEUJG5cR/+jLZTjMSR/57cR3X/eky4+bT+864zdU4ZS/t4cu3q9buvk4wU+
      S2fjC+aBaFpybjxMjf9ZMNGn5LFZ2eeH7OzsQNM0USFG25o/2+02YrEYEomE6KnlDJfJg8Ed
      hZnWcDgsogvAQUUXI1DcnYPBoLDjnSWIvFe5XHadvM6FyGIa+gP8PqyAexjRjasvv4xb2zvI
      XHsaF65dEz2GJxEZA4BAMIi7W1sjdbjBYBCNRsO12YcXGdEJ+TVOM2kwGMA0TVEzIucbFh0T
      j2okEoGu62g2m6LUjVKB8sNmfye5EFwmbMmQY/qGYYjdHxja7+xAk0gkRhifiqKIjKxfAQ5P
      C2ekiPd26pqyOIeLlvyah4FQKITrf/hFXLh2DcDwO06ih0QoioJYNIrqPg1Cvi5NRrkGe1p/
      xi0CxmfI0PJR5EqOEhMvACa7Njc3RU0wNX/8wE4ua2trIjcgJ9B4QtC3AA6OWTI//R4oTZZ6
      ve76/8P7zMdGo2EbcD/+UqVSEQzPh7X7E/J35Sk6DVZXV0dU2pgZrtfreO+99wRPaBpYliX8
      QLfTk3kTNiM5KZj6nAoEAkin0+JBGIYBTdNEDJ0ckmg0KhYKYO/dRYqFogwVJ9woD85Jxy6L
      XBCdTkeYRgBsOkVuJ4+qqkMJPw96BUO7PHH4fY5zMOXOm5NC3Tf3Wq2WCHUy97KysoJOpyPI
      b5NSGBgKp0k6GAyE7yd/NvpaJ+kEOJShRvOD0oHyF+dRyN+dYASCtjsJZk6VZjnsaVmWyGQy
      /ClTf+nYUgLdsiyxUCxrKGuYy+XQarVETwDuiCR0sUMkTwk628c5mLPcm34UQ5R0dDk+Xr27
      nOj1erh9+7YIbJBg5+ZXnaSJT8zcI2xWkDfkNGG63a6oJuOknFRf0rIs5PN5oVdEJbpUKiUY
      rvwbM5iyY8cIyUkmedHEq9VqomZb13WxSdDX8Zq0zI+wMrBQKGBlZUVI4ZzEye6GY3fVaZoU
      i0XRsC4SiQjneH19XUgrTgru4DymyXqkv0JbFTggyMnvW1pamlqdYFFBVTxyf0gxYbmrcydn
      Rr9WqwlyYKvVEqe8X224fPIzYbno0aBj/3TMHwwGAyQSCaE/ygZ3zDFM44gahmHb3egreDXU
      4OtisZi450kHT81+vy80ibgIaDryORE0I7f3KRVsPM5ABgDR5X5pacmmfM3kJR1i1pGcLoAx
      oL1OE4SsU5lZOO2E7Pf7ok9xLBZDuVxGNpsdyT0A9sl/3Db/UYDPLhaLCTOz2WyKxe5MCjor
      yXhKlEolEQnk+JALRP8tFArZ5A15b5nZK/9cBBz7VtftdkdCqTyigSGDc5osLJ1amjxUhJNr
      CQge1eFw+JGc/MDBd9Q0zcauHQwGtj4PBLlfMtefv8saQHIPOOZMZF0kSt8DBwofxWJRRA+n
      aW91lDj2E8DZ1ohHZzQaFZwcL10hN1Act9/vC+pzIBDA3t6eiILI0HV9bK7hpENeBAxldjod
      UZsht6La2NhAsVgc8YHYF42mJfu5BQIB0Vick5qnN8c1EAiI/gr0J1RVFaFnnizHYXouxAJI
      pVLigeq6Lrgmst7QpLuFaZpi56ETJ9vBLAFkKZ+u64+Eze8HmQJOCgtw4BvJJijNRu7ywIE5
      JBcNMYomNwPha8nJ4ikeCAREmLnZbAoTrFwuC6e60Wig1+tB13VRj+G2Kcmn+DyYuce+ALjb
      8x+Pae4mzuztOLCpHR0xefBJCWB3eA704wBOUrkqDIBQY5afcyKRgKZptmSlXCgjm0MMK8sU
      CFmNjwuGv/MkkPVU+TnYbJ0sYG5U8iTnf3N+zEpSPPY8AMESxa2tLTExM5I2jdfkd54OJGQx
      ++m1gDqdDs6dO/dImz5eYLtZ+ldyBZ8b3BKb8ubC5z1uMso1GOwyxAw/r8nTgvdLp9MiGy/7
      L6xMpHTPYcdxYRYAMDwG8/m8jbDFXWPSU8AZf/ba4ZnJfhwXAHDQYdOyrBF+1iTo9XpiAbDw
      aJL3MsEm06sp6Uh/QJ6PpMWzpS4DJhRXY/jVq4R1HI7dBJKhaZrI1hLVahXRaFT0GguFQrbS
      Rrf6AnLi/RYLKduPK2h6MmLW7XaFGcodOhKJCBPEObnl+P60sX55XFR12CW0Uqmg1+uNZN+7
      3S6azabwIeSTXb4GF+S0eqYLtQDICJUXAOnOdNboyLKo2+0aLKz3I7JNoub8OCAQCCCZTIoW
      WGyGSIUP1klQ9cFvU3HmDtxyLoqi2CJM9EcYRpVzCvF4HKZpotfriVPDbZfn7i/roU66EBZq
      AQD2sCgwPOrklH04HPZNx5dKJbGLybRmZ/x/EWLQiwJGfghW4sk1E1wc8k7LajUujGazKWRw
      ZH/AbyKSskIn3TAMUeDEgiS5XNWr3oAbH7+PLG/jd/+FWwDcJeRdw+lcyTWpzr+Tww8MOT97
      e3uIxWIjoTVZ0u9x9QO84OcL0LRstVq2AphOpyP0oKahkMv3ymQyI2JndIRLpRKKxaJQsvZS
      DycmleFcKCcYGE7iarVqa8nqRLVaFc4XY9j83TRNG3GOZDdWqgEHAl6DwQBXrlx5bEKh84S8
      Qckbklfsnhi32dCEcU5w3oPSnJOEP3l6+b124U4AwP8hkRZN563dbotmG+FweESqvdvtCh0h
      pu+ZBJtE2dmvtuFxhjM270erZnSHu7Jsyzs3HzYkp26U8x7TsHTdrAcnFm4B0AnzAsN3TJow
      V0AmI4W7aFfS1JEbejtzA36DR3rww+xd+6iBRfNyFpfJNCc1hcLIbgX8R4GFOvtp/rh1XpdB
      iZWVlRXxN0VRRBqd8WEAIsJAm5X3GecEc+eStTNPMR40OxjN6ff7Nu1R4GADcpvgdF4fVpRu
      oRYAow2HBcOoFOSq1WpIJpMolUoIhUKi8R5Be9MNrHf2aw97Cju4aZTLZdHilr6Wc/J7ddbh
      iSyXcx7F5yQWygSS9f7laJDzNPCyOeUHx86T8jWcD9zpTMmOVr1eR6/XE3bkLOn2xwXk+AAH
      pzkA13GkiIEzCiebpizdnPdzl0O5C7UAgKF5I6e1vSa6mwIaH/7q6qqoKaZCRT6ft5lMTADJ
      i6Lf79ukHoED1bjTye8N5gj8TEW3kHWtVhMUdbl2gHkFntDzjtJxQwMW7ATgrsvSPcDO/uOE
      DwQC2N7eFozFRCIh+D/kDVEipVqtIhAICL3SYDCIpaUlV/uz0+mMCLySK38KbzDwcBhxXGb2
      SaZzdv0xTXPu/RnkjPZCLQBqCLnZ5azpZQ5geXkZ3W4XS0tLME3Txml3vo9FGtQ08nqgbrvU
      6eT3B3f/WZWhWahDcCwouT7vE5jXW6gFwB2c2j4yaK+Hw+ERHVAWb7uBA0NZFD/iltvCkJmo
      pzgATRTy+p0ZfPl18vObxqll7qDRaNg0m+aJhVoAinJQdO3H93FC13WUSiWhA0TIGUXZzvSC
      fPJwoBYpS37c4KSnKl93v6ONmxPr9btzAchF9W5QFMWmFHLY8ZAF0Gz3P9TVjhAswp7W9Ein
      0zBN05ZEI/1Blgf3AncaGZRJd8MkuYRHBZz01WoVlUoFzWZz4l5izusAB1E8Z6BDrklwWziz
      hEXJFmU+SCTkDnW1I4SiKEJf3vkQKpWK54RkDmBvbw+VSgXFYtGmTDBuATBjLF/PLxN5FMfx
      IoKZd6d85WGu48UJcoao3Z4tzSEyAKYFx5NMUV5/4RYAcNB0we0heClEmKYJ0zRx5swZpFKp
      ET9h3M7htpvJGeXHGX7ExHFgZp8bDCNt3W4XtVoNvV7PRr2W4Tb+9XrdlyrjB/KQbMU8h7rS
      goE7A+U5gKH5Ig/cuB1b5rgDQ6f7pHY/nydmycx3Oh2USiWRk2Eth6xM0Wq1EAwGbX2hCXlB
      yIxTWeFu1g1qYReAV68rJsCoRBAMBlGpVGyTn5A5J+O0f+iA1+t1UaZ3uvvPxoINBoO4ePEi
      2u22kLehI0ohMrmmQIbb5CdYFM9NaqbPeOh3HjFk2T0+KE58ataQ/59MJkdK8KrVKlqtFs6f
      Pz8xqzAWi4ld5XTyD0E/apqoHEG7Xn7+PFVZWCM/ay9KhFeNQbPZHOkcNC0WdgHQJnfWobJI
      mr2tvB4gHR3TNCdeAKcTfxQsg5x3MsptzCZ5/bw/x8IuAO48rOjiSeDVzFp+QJZliT5f07YY
      OoUdNE+OIuRLCUUvP8PtvvLfqCo+C1doIaNAwEHEp1wuo1wui562bplG/qxWq4KBSBW0RZfn
      PgmQi+TnjcNuUCTKzUrBWOjZQSeKCSpVVfHgwQOk02mhH1oqlQStlrJ7/X4fkUhEVIWdYjZQ
      EsU52WZ9tqy4m/Y98s9ZP8PCngCE035XVRWGYaBSqQgCFf2FWq0mjlVmgE8xO+RElRyzd/s3
      LfxOaOdkl/9uWZanTtBU95/p3Q8B1KwxTRODwQC5XM4mwy33DWPoMhaLPTItjhYFoVBIcH8I
      Z6jSGURwUh+cjTIAe7RPBie5XB7rXAjzMG8XfgGQ4kAOx927d4WaA7k67XZbFL2Hw+GJu5+f
      YnJEIhEYhuH5XOXoDJOKVJXj5CfJUaY405H1uiZgjxjJ5ZWTqHqMw8IvAMAucqTrOizLQiwW
      w2AwEPW6lmUhGo2eTv5jAhOOsuS8PA5UgWAlGBcBANsuT7jZ+LKppWnaXJi6J2IByMckJzh/
      1zQN0WhUaP2cTv75g7x/J2hmsnBokuy5oiiiR4OqqgiFQp5ERa9rMcI3j7E+EQuArUsp1uos
      Zj+d9EcPypOzNNWrAm8S8LSQezhPo7wxzyKlhZNG9MK8wl6nOBzkKM88MuayAgfrwMe9nr5C
      JpOZG1HxRJwAwOnEP27MmyYiE+EYznQWJAGj0SAnnXlWBJ1V+Kc4xXFAVpOTIZ88/DlPobL/
      B5dUgUuJ1Wq4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='percentage of GDP and government spending money on miltary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='summary' width='192'>
      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
      IKYpADHtP6eHrXUuKaIkAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
